--------------------------------------------------------------------
ASCII Plaintxt ---: 'Two One Nine Two'
ASCII Key --------: 'Thats my Kung Fu'
HEX   Plaintxt ---: 54 77 6f 20 4f 6e 65 20 4e 69 6e 65 20 54 77 6f
HEX   Key --------: 54 68 61 74 73 20 6d 79 20 4b 75 6e 67 20 46 75
--------------------------------------------------------------------
Start process of encrypting then decrypting - Using AES 128-bit cipher.
           
           Press Enter to continue...

• Round Constant:
 rcon_1: 0x10
 rcon_2: 0x20
 rcon_3: 0x40
 rcon_4: 0x80
 rcon_5: 0x10
 rcon_6: 0x20
 rcon_7: 0x40
 rcon_8: 0x80
 rcon_9: 0x1b
 rcon_10: 0x36

Key Expansion:
--------------------------------------------------------------------
• first 4 words ar first 4 sublets of 8 chars in key
• w[i] = if i mod 4 
	 = 0, w[i-4] ⊕ g(w[-1]) 
	!= 0, w[i-2] ⊕ w[i-1]

w[0]: 54686174
w[1]: 73206d79
w[2]: 204b756e
w[3]: 67204675

g(w[3]) = ?
	• w[3] as 'w'
	• rcon_1 = 0x10
	1) <-LShift w: 20467567
	2) SubSbox w: b75a9d85
	3) w * rcon_1
	b75a9d85 ⊕ 0x10 = 67204675
	g(w[3])] =  67204675
w[4] = w[0] ⊕ g(w[3]) = b65a9d85

w[5] = w[3] ⊕ w[4] = e232fcf1
w[6] = w[4] ⊕ w[5] = 91129188
w[7] = w[5] ⊕ w[6] = b159e4e6

g(w[7]) = ?
	• w[7] as 'w'
	• rcon_2 = 0x20
	1) <-LShift w: 79a293d6
	2) SubSbox w: b63adcf6
	3) w * rcon_2
	b63adcf6 ⊕ 0x20 = d679a293
	g(w[7])] =  d679a293
w[8] = w[4] ⊕ g(w[7]) = b43adcf6

w[9] = w[7] ⊕ w[8] = 56082007
w[10] = w[8] ⊕ w[9] = c71ab18f
w[11] = w[9] ⊕ w[10] = 76435569

g(w[11]) = ?
	• w[11] as 'w'
	• rcon_3 = 0x40
	1) <-LShift w: 3af7faa0
	2) SubSbox w: 80682de0
	3) w * rcon_3
	80682de0 ⊕ 0x40 = a03af7fa
	g(w[11])] =  a03af7fa
w[12] = w[8] ⊕ g(w[11]) = 84682de0

w[13] = w[11] ⊕ w[12] = d2600de7
w[14] = w[12] ⊕ w[13] = 157abc68
w[15] = w[13] ⊕ w[14] = 6339e901

g(w[15]) = ?
	• w[15] as 'w'
	• rcon_4 = 0x80
	1) <-LShift w: 031efbc3
	2) SubSbox w: 7b720f2e
	3) w * rcon_4
	7b720f2e ⊕ 0x80 = c3031efb
	g(w[15])] =  c3031efb
w[16] = w[12] ⊕ g(w[15]) = 73720f2e

w[17] = w[15] ⊕ w[16] = a11202c9
w[18] = w[16] ⊕ w[17] = b468bea1
w[19] = w[17] ⊕ w[18] = d75157a0

g(w[19]) = ?
	• w[19] as 'w'
	• rcon_5 = 0x10
	1) <-LShift w: 52495b14
	2) SubSbox w: 003b39fa
	3) w * rcon_5
	003b39fa ⊕ 0x10 = 1452495b
	g(w[19])] =  1452495b
w[20] = w[16] ⊕ g(w[19]) = 103b39fa

w[21] = w[19] ⊕ w[20] = b1293b33
w[22] = w[20] ⊕ w[21] = 05418592
w[23] = w[21] ⊕ w[22] = d210d232

g(w[23]) = ?
	• w[23] as 'w'
	• rcon_6 = 0x20
	1) <-LShift w: 429b69c6
	2) SubSbox w: 2c14f9b4
	3) w * rcon_6
	2c14f9b4 ⊕ 0x20 = c6429b69
	g(w[23])] =  c6429b69
w[24] = w[20] ⊕ g(w[23]) = 0c14f9b4

w[25] = w[23] ⊕ w[24] = bd3dc287
w[26] = w[24] ⊕ w[25] = b87c4715
w[27] = w[25] ⊕ w[26] = 6a6c9527

g(w[27]) = ?
	• w[27] as 'w'
	• rcon_7 = 0x40
	1) <-LShift w: 2e0e4eac
	2) SubSbox w: 31ab2f91
	3) w * rcon_7
	31ab2f91 ⊕ 0x40 = ac2e0e4e
	g(w[27])] =  ac2e0e4e
w[28] = w[24] ⊕ g(w[27]) = 71ab2f91

w[29] = w[27] ⊕ w[28] = cc96ed16
w[30] = w[28] ⊕ w[29] = 74eaaa03
w[31] = w[29] ⊕ w[30] = 1e863f24

g(w[31]) = ?
	• w[31] as 'w'
	• rcon_8 = 0x80
	1) <-LShift w: a8316ab2
	2) SubSbox w: c2c70237
	3) w * rcon_8
	c2c70237 ⊕ 0x80 = b2a8316a
	g(w[31])] =  b2a8316a
w[32] = w[28] ⊕ g(w[31]) = 42c70237

w[33] = w[31] ⊕ w[32] = 8e51ef21
w[34] = w[32] ⊕ w[33] = fabb4522
w[35] = w[33] ⊕ w[34] = e43d7a06

g(w[35]) = ?
	• w[35] as 'w'
	• rcon_9 = 0x1b
	1) <-LShift w: 954b6c56
	2) SubSbox w: 2ab350b1
	3) w * rcon_9
	2ab350b1 ⊕ 0x1b = 56954b6c
	g(w[35])] =  56954b6c
w[36] = w[32] ⊕ g(w[35]) = 31b350b1

w[37] = w[35] ⊕ w[36] = bfe2bf90
w[38] = w[36] ⊕ w[37] = 4559fab2
w[39] = w[37] ⊕ w[38] = a16480b4

g(w[39]) = ?
	• w[39] as 'w'
	• rcon_10 = 0x36
	1) <-LShift w: f1cbd8f7
	2) SubSbox w: a11f6168
	3) w * rcon_10
	a11f6168 ⊕ 0x36 = f7f1cbd8
	g(w[39])] =  f7f1cbd8
w[40] = w[36] ⊕ g(w[39]) = 971f6168

w[41] = w[39] ⊕ w[40] = 28fddef8
w[42] = w[40] ⊕ w[41] = 6da4244a
w[43] = w[41] ⊕ w[42] = ccc0a4fe

Keywords:
--------------------------------------------------------------------
w[0]:	54686174
w[1]:	73206d79
w[2]:	204b756e
w[3]:	67204675
w[4]:	e232fcf1
w[5]:	91129188
w[6]:	b159e4e6
w[7]:	d679a293
w[8]:	56082007
w[9]:	c71ab18f
w[10]:	76435569
w[11]:	a03af7fa
w[12]:	d2600de7
w[13]:	157abc68
w[14]:	6339e901
w[15]:	c3031efb
w[16]:	a11202c9
w[17]:	b468bea1
w[18]:	d75157a0
w[19]:	1452495b
w[20]:	b1293b33
w[21]:	05418592
w[22]:	d210d232
w[23]:	c6429b69
w[24]:	bd3dc287
w[25]:	b87c4715
w[26]:	6a6c9527
w[27]:	ac2e0e4e
w[28]:	cc96ed16
w[29]:	74eaaa03
w[30]:	1e863f24
w[31]:	b2a8316a
w[32]:	8e51ef21
w[33]:	fabb4522
w[34]:	e43d7a06
w[35]:	56954b6c
w[36]:	bfe2bf90
w[37]:	4559fab2
w[38]:	a16480b4
w[39]:	f7f1cbd8
w[40]:	28fddef8
w[41]:	6da4244a
w[42]:	ccc0a4fe
w[43]:	3b316f26

Rounded keys:
--------------------------------------------------------------------
Round_0:	 5468617473206d79204b756e67204675
Round_1:	 e232fcf191129188b159e4e6d679a293
Round_2:	 56082007c71ab18f76435569a03af7fa
Round_3:	 d2600de7157abc686339e901c3031efb
Round_4:	 a11202c9b468bea1d75157a01452495b
Round_5:	 b1293b3305418592d210d232c6429b69
Round_6:	 bd3dc287b87c47156a6c9527ac2e0e4e
Round_7:	 cc96ed1674eaaa031e863f24b2a8316a
Round_8:	 8e51ef21fabb4522e43d7a0656954b6c
Round_9:	 bfe2bf904559fab2a16480b4f7f1cbd8
Round_10:	 28fddef86da4244accc0a4fe3b316f26

Round Keys State Matricies:
--------------------------------------------------------------------
RK_0: 5468617473206d79204b756e67204675
RK_state = 
	54  73  20  67  
	68  20  4b  20  
	61  6d  75  46  
	74  79  6e  75  

RK_1: e232fcf191129188b159e4e6d679a293
RK_state = 
	e2  91  b1  d6  
	32  12  59  79  
	fc  91  e4  a2  
	f1  88  e6  93  

RK_2: 56082007c71ab18f76435569a03af7fa
RK_state = 
	56  c7  76  a0  
	08  1a  43  3a  
	20  b1  55  f7  
	07  8f  69  fa  

RK_3: d2600de7157abc686339e901c3031efb
RK_state = 
	d2  15  63  c3  
	60  7a  39  03  
	0d  bc  e9  1e  
	e7  68  01  fb  

RK_4: a11202c9b468bea1d75157a01452495b
RK_state = 
	a1  b4  d7  14  
	12  68  51  52  
	02  be  57  49  
	c9  a1  a0  5b  

RK_5: b1293b3305418592d210d232c6429b69
RK_state = 
	b1  05  d2  c6  
	29  41  10  42  
	3b  85  d2  9b  
	33  92  32  69  

RK_6: bd3dc287b87c47156a6c9527ac2e0e4e
RK_state = 
	bd  b8  6a  ac  
	3d  7c  6c  2e  
	c2  47  95  0e  
	87  15  27  4e  

RK_7: cc96ed1674eaaa031e863f24b2a8316a
RK_state = 
	cc  74  1e  b2  
	96  ea  86  a8  
	ed  aa  3f  31  
	16  03  24  6a  

RK_8: 8e51ef21fabb4522e43d7a0656954b6c
RK_state = 
	8e  fa  e4  56  
	51  bb  3d  95  
	ef  45  7a  4b  
	21  22  06  6c  

RK_9: bfe2bf904559fab2a16480b4f7f1cbd8
RK_state = 
	bf  45  a1  f7  
	e2  59  64  f1  
	bf  fa  80  cb  
	90  b2  b4  d8  

RK_10: 28fddef86da4244accc0a4fe3b316f26
RK_state = 
	28  6d  cc  3b  
	fd  a4  c0  31  
	de  24  a4  6f  
	f8  4a  fe  26  

Add Round Keys:
--------------------------------------------------------------------
Add Roundkey Round 0 ===============================================
 state matrix: (plaintext as matrix)
54  4f  4e  20
77  6e  69  54
6f  65  6e  77
20  20  65  6f
 ⊕ RK_matrix_0
54  73  20  67
68  20  4b  20
61  6d  75  46
74  79  6e  75
=======>state_matrix<=======
00  3c  6e  47
1f  4e  22  74
0e  08  1b  31
54  59  0b  1a

Add Roundkey Round 1 ===============================================
 state_matrix:
00  3c  6e  47
1f  4e  22  74
0e  08  1b  31
54  59  0b  1a
 1) Substitution S-box =>
63  eb  9f  a0
c0  2f  93  92
ab  30  af  c7
20  cb  2b  a2
 2) Rows are shifted <left by offsets of 0,1,2, and 3 =>
63  eb  9f  a0
2f  93  92  c0
af  c7  ab  30
a2  20  cb  2b

 3) Mix Column:
multiplies 'fixed_matrix' ⊕ state_matrix
 i_j   i_j
(0,0)*(0,0) => (0) = 2*99 = 10 * 1100011 = 11000110
(0,1)*(1,0) => (1) = (2*47)⊕47 = 1011110 ⊕ 101111 = 1110001
(0,2)*(2,0) => (2) = 1 * 10101111 = 10101111
(0,3)*(3,0) => (3) = 1 * 10100010 = 10100010

state_matrix[0][0] = (0)⊕(1)⊕(2)⊕(3)
  11000110⊕
  01110001⊕
  10101111⊕
  10100010
= 10111010 | 186 | ba

(0,0)*(0,1) => (0) = 2*235 = 10 * 11101011 = 11001101
(0,1)*(1,1) => (1) = (2*147)⊕147 = 100100110 ⊕ 10010011 = 10101110
(0,2)*(2,1) => (2) = 1 * 11000111 = 11000111
(0,3)*(3,1) => (3) = 1 * 100000 = 100000

state_matrix[0][1] = (0)⊕(1)⊕(2)⊕(3)
  11001101⊕
  10101110⊕
  11000111⊕
  00100000
= 10000100 | 132 | 84

(0,0)*(0,2) => (0) = 2*159 = 10 * 10011111 = 100101
(0,1)*(1,2) => (1) = (2*146)⊕146 = 100100100 ⊕ 10010010 = 10101101
(0,2)*(2,2) => (2) = 1 * 10101011 = 10101011
(0,3)*(3,2) => (3) = 1 * 11001011 = 11001011

state_matrix[0][2] = (0)⊕(1)⊕(2)⊕(3)
  00100101⊕
  10101101⊕
  10101011⊕
  11001011
= 11101000 | 232 | e8

(0,0)*(0,3) => (0) = 2*160 = 10 * 10100000 = 1011011
(0,1)*(1,3) => (1) = (2*192)⊕192 = 110000000 ⊕ 11000000 = 1011011
(0,2)*(2,3) => (2) = 1 * 110000 = 110000
(0,3)*(3,3) => (3) = 1 * 101011 = 101011

state_matrix[0][3] = (0)⊕(1)⊕(2)⊕(3)
  01011011⊕
  01011011⊕
  00110000⊕
  00101011
= 00011011 | 27 | 1b

(1,0)*(0,0) => (0) = 1 * 1100011 = 1100011
(1,1)*(1,0) => (1) = 2*47 = 10 * 101111 = 1011110
(1,2)*(2,0) => (2) = (2*175)⊕175 = 101011110 ⊕ 10101111 = 11101010
(1,3)*(3,0) => (3) = 1 * 10100010 = 10100010

state_matrix[1][0] = (0)⊕(1)⊕(2)⊕(3)
  01100011⊕
  01011110⊕
  11101010⊕
  10100010
= 01110101 | 117 | 75

(1,0)*(0,1) => (0) = 1 * 11101011 = 11101011
(1,1)*(1,1) => (1) = 2*147 = 10 * 10010011 = 111101
(1,2)*(2,1) => (2) = (2*199)⊕199 = 110001110 ⊕ 11000111 = 1010010
(1,3)*(3,1) => (3) = 1 * 100000 = 100000

state_matrix[1][1] = (0)⊕(1)⊕(2)⊕(3)
  11101011⊕
  00111101⊕
  01010010⊕
  00100000
= 10100100 | 164 | a4

(1,0)*(0,2) => (0) = 1 * 10011111 = 10011111
(1,1)*(1,2) => (1) = 2*146 = 10 * 10010010 = 111111
(1,2)*(2,2) => (2) = (2*171)⊕171 = 101010110 ⊕ 10101011 = 11100110
(1,3)*(3,2) => (3) = 1 * 11001011 = 11001011

state_matrix[1][2] = (0)⊕(1)⊕(2)⊕(3)
  10011111⊕
  00111111⊕
  11100110⊕
  11001011
= 10001101 | 141 | 8d

(1,0)*(0,3) => (0) = 1 * 10100000 = 10100000
(1,1)*(1,3) => (1) = 2*192 = 10 * 11000000 = 10011011
(1,2)*(2,3) => (2) = (2*48)⊕48 = 1100000 ⊕ 110000 = 1010000
(1,3)*(3,3) => (3) = 1 * 101011 = 101011

state_matrix[1][3] = (0)⊕(1)⊕(2)⊕(3)
  10100000⊕
  10011011⊕
  01010000⊕
  00101011
= 01000000 | 64 | 40

(2,0)*(0,0) => (0) = 1 * 1100011 = 1100011
(2,1)*(1,0) => (1) = 1 * 101111 = 101111
(2,2)*(2,0) => (2) = 2*175 = 10 * 10101111 = 1000101
(2,3)*(3,0) => (3) = (2*162)⊕162 = 101000100 ⊕ 10100010 = 11111101

state_matrix[2][0] = (0)⊕(1)⊕(2)⊕(3)
  01100011⊕
  00101111⊕
  01000101⊕
  11111101
= 11110100 | 244 | f4

(2,0)*(0,1) => (0) = 1 * 11101011 = 11101011
(2,1)*(1,1) => (1) = 1 * 10010011 = 10010011
(2,2)*(2,1) => (2) = 2*199 = 10 * 11000111 = 10010101
(2,3)*(3,1) => (3) = (2*32)⊕32 = 1000000 ⊕ 100000 = 1100000

state_matrix[2][1] = (0)⊕(1)⊕(2)⊕(3)
  11101011⊕
  10010011⊕
  10010101⊕
  01100000
= 10001101 | 141 | 8d

(2,0)*(0,2) => (0) = 1 * 10011111 = 10011111
(2,1)*(1,2) => (1) = 1 * 10010010 = 10010010
(2,2)*(2,2) => (2) = 2*171 = 10 * 10101011 = 1001101
(2,3)*(3,2) => (3) = (2*203)⊕203 = 110010110 ⊕ 11001011 = 1000110

state_matrix[2][2] = (0)⊕(1)⊕(2)⊕(3)
  10011111⊕
  10010010⊕
  01001101⊕
  01000110
= 00000110 | 6 | 06

(2,0)*(0,3) => (0) = 1 * 10100000 = 10100000
(2,1)*(1,3) => (1) = 1 * 11000000 = 11000000
(2,2)*(2,3) => (2) = 2*48 = 10 * 110000 = 1100000
(2,3)*(3,3) => (3) = (2*43)⊕43 = 1010110 ⊕ 101011 = 1111101

state_matrix[2][3] = (0)⊕(1)⊕(2)⊕(3)
  10100000⊕
  11000000⊕
  01100000⊕
  01111101
= 01111101 | 125 | 7d

(3,0)*(0,0) => (0) = (2*99)⊕99 = 11000110 ⊕ 1100011 = 10100101
(3,1)*(1,0) => (1) = 1 * 101111 = 101111
(3,2)*(2,0) => (2) = 1 * 10101111 = 10101111
(3,3)*(3,0) => (3) = 2*162 = 10 * 10100010 = 1011111

state_matrix[3][0] = (0)⊕(1)⊕(2)⊕(3)
  10100101⊕
  00101111⊕
  10101111⊕
  01011111
= 01111010 | 122 | 7a

(3,0)*(0,1) => (0) = (2*235)⊕235 = 111010110 ⊕ 11101011 = 100110
(3,1)*(1,1) => (1) = 1 * 10010011 = 10010011
(3,2)*(2,1) => (2) = 1 * 11000111 = 11000111
(3,3)*(3,1) => (3) = 2*32 = 10 * 100000 = 1000000

state_matrix[3][1] = (0)⊕(1)⊕(2)⊕(3)
  00100110⊕
  10010011⊕
  11000111⊕
  01000000
= 00110010 | 50 | 32

(3,0)*(0,2) => (0) = (2*159)⊕159 = 100111110 ⊕ 10011111 = 10111010
(3,1)*(1,2) => (1) = 1 * 10010010 = 10010010
(3,2)*(2,2) => (2) = 1 * 10101011 = 10101011
(3,3)*(3,2) => (3) = 2*203 = 10 * 11001011 = 10001101

state_matrix[3][2] = (0)⊕(1)⊕(2)⊕(3)
  10111010⊕
  10010010⊕
  10101011⊕
  10001101
= 00001110 | 14 | 0e

(3,0)*(0,3) => (0) = (2*160)⊕160 = 101000000 ⊕ 10100000 = 11111011
(3,1)*(1,3) => (1) = 1 * 11000000 = 11000000
(3,2)*(2,3) => (2) = 1 * 110000 = 110000
(3,3)*(3,3) => (3) = 2*43 = 10 * 101011 = 1010110

state_matrix[3][3] = (0)⊕(1)⊕(2)⊕(3)
  11111011⊕
  11000000⊕
  00110000⊕
  01010110
= 01011101 | 93 | 5d

=======>state_matrix<=======
ba  84  e8  1b
75  a4  8d  40
f4  8d  06  7d
7a  32  0e  5d
 4) ⊕ RK_matrix_1
e2  91  b1  d6
32  12  59  79
fc  91  e4  a2
f1  88  e6  93
=======>state_matrix<=======
58  15  59  cd
47  b6  d4  39
08  1c  e2  df
8b  ba  e8  ce
=======> CIPHERTEXT: 58 47 08 8b 15 b6 1c ba 59 d4 e2 e8 cd 39 df ce 

Add Roundkey Round 2 ===============================================
 state_matrix:
58  15  59  cd
47  b6  d4  39
08  1c  e2  df
8b  ba  e8  ce
 1) Substitution S-box =>
6a  59  cb  bd
a0  4e  48  12
30  9c  98  9e
3d  f4  9b  8b
 2) Rows are shifted <left by offsets of 0,1,2, and 3 =>
6a  59  cb  bd
4e  48  12  a0
98  9e  30  9c
8b  3d  f4  9b

 3) Mix Column:
multiplies 'fixed_matrix' ⊕ state_matrix
 i_j   i_j
(0,0)*(0,0) => (0) = 2*106 = 10 * 1101010 = 11010100
(0,1)*(1,0) => (1) = (2*78)⊕78 = 10011100 ⊕ 1001110 = 11010010
(0,2)*(2,0) => (2) = 1 * 10011000 = 10011000
(0,3)*(3,0) => (3) = 1 * 10001011 = 10001011

state_matrix[0][0] = (0)⊕(1)⊕(2)⊕(3)
  11010100⊕
  11010010⊕
  10011000⊕
  10001011
= 00010101 | 21 | 15

(0,0)*(0,1) => (0) = 2*89 = 10 * 1011001 = 10110010
(0,1)*(1,1) => (1) = (2*72)⊕72 = 10010000 ⊕ 1001000 = 11011000
(0,2)*(2,1) => (2) = 1 * 10011110 = 10011110
(0,3)*(3,1) => (3) = 1 * 111101 = 111101

state_matrix[0][1] = (0)⊕(1)⊕(2)⊕(3)
  10110010⊕
  11011000⊕
  10011110⊕
  00111101
= 11001001 | 201 | c9

(0,0)*(0,2) => (0) = 2*203 = 10 * 11001011 = 10001101
(0,1)*(1,2) => (1) = (2*18)⊕18 = 100100 ⊕ 10010 = 110110
(0,2)*(2,2) => (2) = 1 * 110000 = 110000
(0,3)*(3,2) => (3) = 1 * 11110100 = 11110100

state_matrix[0][2] = (0)⊕(1)⊕(2)⊕(3)
  10001101⊕
  00110110⊕
  00110000⊕
  11110100
= 01111111 | 127 | 7f

(0,0)*(0,3) => (0) = 2*189 = 10 * 10111101 = 1100001
(0,1)*(1,3) => (1) = (2*160)⊕160 = 101000000 ⊕ 10100000 = 11111011
(0,2)*(2,3) => (2) = 1 * 10011100 = 10011100
(0,3)*(3,3) => (3) = 1 * 10011011 = 10011011

state_matrix[0][3] = (0)⊕(1)⊕(2)⊕(3)
  01100001⊕
  11111011⊕
  10011100⊕
  10011011
= 10011101 | 157 | 9d

(1,0)*(0,0) => (0) = 1 * 1101010 = 1101010
(1,1)*(1,0) => (1) = 2*78 = 10 * 1001110 = 10011100
(1,2)*(2,0) => (2) = (2*152)⊕152 = 100110000 ⊕ 10011000 = 10110011
(1,3)*(3,0) => (3) = 1 * 10001011 = 10001011

state_matrix[1][0] = (0)⊕(1)⊕(2)⊕(3)
  01101010⊕
  10011100⊕
  10110011⊕
  10001011
= 11001110 | 206 | ce

(1,0)*(0,1) => (0) = 1 * 1011001 = 1011001
(1,1)*(1,1) => (1) = 2*72 = 10 * 1001000 = 10010000
(1,2)*(2,1) => (2) = (2*158)⊕158 = 100111100 ⊕ 10011110 = 10111001
(1,3)*(3,1) => (3) = 1 * 111101 = 111101

state_matrix[1][1] = (0)⊕(1)⊕(2)⊕(3)
  01011001⊕
  10010000⊕
  10111001⊕
  00111101
= 01001101 | 77 | 4d

(1,0)*(0,2) => (0) = 1 * 11001011 = 11001011
(1,1)*(1,2) => (1) = 2*18 = 10 * 10010 = 100100
(1,2)*(2,2) => (2) = (2*48)⊕48 = 1100000 ⊕ 110000 = 1010000
(1,3)*(3,2) => (3) = 1 * 11110100 = 11110100

state_matrix[1][2] = (0)⊕(1)⊕(2)⊕(3)
  11001011⊕
  00100100⊕
  01010000⊕
  11110100
= 01001011 | 75 | 4b

(1,0)*(0,3) => (0) = 1 * 10111101 = 10111101
(1,1)*(1,3) => (1) = 2*160 = 10 * 10100000 = 1011011
(1,2)*(2,3) => (2) = (2*156)⊕156 = 100111000 ⊕ 10011100 = 10111111
(1,3)*(3,3) => (3) = 1 * 10011011 = 10011011

state_matrix[1][3] = (0)⊕(1)⊕(2)⊕(3)
  10111101⊕
  01011011⊕
  10111111⊕
  10011011
= 11000010 | 194 | c2

(2,0)*(0,0) => (0) = 1 * 1101010 = 1101010
(2,1)*(1,0) => (1) = 1 * 1001110 = 1001110
(2,2)*(2,0) => (2) = 2*152 = 10 * 10011000 = 101011
(2,3)*(3,0) => (3) = (2*139)⊕139 = 100010110 ⊕ 10001011 = 10000110

state_matrix[2][0] = (0)⊕(1)⊕(2)⊕(3)
  01101010⊕
  01001110⊕
  00101011⊕
  10000110
= 10001001 | 137 | 89

(2,0)*(0,1) => (0) = 1 * 1011001 = 1011001
(2,1)*(1,1) => (1) = 1 * 1001000 = 1001000
(2,2)*(2,1) => (2) = 2*158 = 10 * 10011110 = 100111
(2,3)*(3,1) => (3) = (2*61)⊕61 = 1111010 ⊕ 111101 = 1000111

state_matrix[2][1] = (0)⊕(1)⊕(2)⊕(3)
  01011001⊕
  01001000⊕
  00100111⊕
  01000111
= 01110001 | 113 | 71

(2,0)*(0,2) => (0) = 1 * 11001011 = 11001011
(2,1)*(1,2) => (1) = 1 * 10010 = 10010
(2,2)*(2,2) => (2) = 2*48 = 10 * 110000 = 1100000
(2,3)*(3,2) => (3) = (2*244)⊕244 = 111101000 ⊕ 11110100 = 111

state_matrix[2][2] = (0)⊕(1)⊕(2)⊕(3)
  11001011⊕
  00010010⊕
  01100000⊕
  00000111
= 10111110 | 190 | be

(2,0)*(0,3) => (0) = 1 * 10111101 = 10111101
(2,1)*(1,3) => (1) = 1 * 10100000 = 10100000
(2,2)*(2,3) => (2) = 2*156 = 10 * 10011100 = 100011
(2,3)*(3,3) => (3) = (2*155)⊕155 = 100110110 ⊕ 10011011 = 10110110

state_matrix[2][3] = (0)⊕(1)⊕(2)⊕(3)
  10111101⊕
  10100000⊕
  00100011⊕
  10110110
= 10001000 | 136 | 88

(3,0)*(0,0) => (0) = (2*106)⊕106 = 11010100 ⊕ 1101010 = 10111110
(3,1)*(1,0) => (1) = 1 * 1001110 = 1001110
(3,2)*(2,0) => (2) = 1 * 10011000 = 10011000
(3,3)*(3,0) => (3) = 2*139 = 10 * 10001011 = 1101

state_matrix[3][0] = (0)⊕(1)⊕(2)⊕(3)
  10111110⊕
  01001110⊕
  10011000⊕
  00001101
= 01100101 | 101 | 65

(3,0)*(0,1) => (0) = (2*89)⊕89 = 10110010 ⊕ 1011001 = 11101011
(3,1)*(1,1) => (1) = 1 * 1001000 = 1001000
(3,2)*(2,1) => (2) = 1 * 10011110 = 10011110
(3,3)*(3,1) => (3) = 2*61 = 10 * 111101 = 1111010

state_matrix[3][1] = (0)⊕(1)⊕(2)⊕(3)
  11101011⊕
  01001000⊕
  10011110⊕
  01111010
= 01000111 | 71 | 47

(3,0)*(0,2) => (0) = (2*203)⊕203 = 110010110 ⊕ 11001011 = 1000110
(3,1)*(1,2) => (1) = 1 * 10010 = 10010
(3,2)*(2,2) => (2) = 1 * 110000 = 110000
(3,3)*(3,2) => (3) = 2*244 = 10 * 11110100 = 11110011

state_matrix[3][2] = (0)⊕(1)⊕(2)⊕(3)
  01000110⊕
  00010010⊕
  00110000⊕
  11110011
= 10010111 | 151 | 97

(3,0)*(0,3) => (0) = (2*189)⊕189 = 101111010 ⊕ 10111101 = 11011100
(3,1)*(1,3) => (1) = 1 * 10100000 = 10100000
(3,2)*(2,3) => (2) = 1 * 10011100 = 10011100
(3,3)*(3,3) => (3) = 2*155 = 10 * 10011011 = 101101

state_matrix[3][3] = (0)⊕(1)⊕(2)⊕(3)
  11011100⊕
  10100000⊕
  10011100⊕
  00101101
= 11001101 | 205 | cd

=======>state_matrix<=======
15  c9  7f  9d
ce  4d  4b  c2
89  71  be  88
65  47  97  cd
 4) ⊕ RK_matrix_2
56  c7  76  a0
08  1a  43  3a
20  b1  55  f7
07  8f  69  fa
=======>state_matrix<=======
43  0e  09  3d
c6  57  08  f8
a9  c0  eb  7f
62  c8  fe  37
=======> CIPHERTEXT: 43 c6 a9 62 0e 57 c0 c8 09 08 eb fe 3d f8 7f 37 

Add Roundkey Round 3 ===============================================
 state_matrix:
43  0e  09  3d
c6  57  08  f8
a9  c0  eb  7f
62  c8  fe  37
 1) Substitution S-box =>
1a  ab  01  27
b4  5b  30  41
d3  ba  e9  d2
aa  e8  bb  9a
 2) Rows are shifted <left by offsets of 0,1,2, and 3 =>
1a  ab  01  27
5b  30  41  b4
e9  d2  d3  ba
9a  aa  e8  bb

 3) Mix Column:
multiplies 'fixed_matrix' ⊕ state_matrix
 i_j   i_j
(0,0)*(0,0) => (0) = 2*26 = 10 * 11010 = 110100
(0,1)*(1,0) => (1) = (2*91)⊕91 = 10110110 ⊕ 1011011 = 11101101
(0,2)*(2,0) => (2) = 1 * 11101001 = 11101001
(0,3)*(3,0) => (3) = 1 * 10011010 = 10011010

state_matrix[0][0] = (0)⊕(1)⊕(2)⊕(3)
  00110100⊕
  11101101⊕
  11101001⊕
  10011010
= 10101010 | 170 | aa

(0,0)*(0,1) => (0) = 2*171 = 10 * 10101011 = 1001101
(0,1)*(1,1) => (1) = (2*48)⊕48 = 1100000 ⊕ 110000 = 1010000
(0,2)*(2,1) => (2) = 1 * 11010010 = 11010010
(0,3)*(3,1) => (3) = 1 * 10101010 = 10101010

state_matrix[0][1] = (0)⊕(1)⊕(2)⊕(3)
  01001101⊕
  01010000⊕
  11010010⊕
  10101010
= 01100101 | 101 | 65

(0,0)*(0,2) => (0) = 2*1 = 10 * 1 = 10
(0,1)*(1,2) => (1) = (2*65)⊕65 = 10000010 ⊕ 1000001 = 11000011
(0,2)*(2,2) => (2) = 1 * 11010011 = 11010011
(0,3)*(3,2) => (3) = 1 * 11101000 = 11101000

state_matrix[0][2] = (0)⊕(1)⊕(2)⊕(3)
  00000010⊕
  11000011⊕
  11010011⊕
  11101000
= 11111010 | 250 | fa

(0,0)*(0,3) => (0) = 2*39 = 10 * 100111 = 1001110
(0,1)*(1,3) => (1) = (2*180)⊕180 = 101101000 ⊕ 10110100 = 11000111
(0,2)*(2,3) => (2) = 1 * 10111010 = 10111010
(0,3)*(3,3) => (3) = 1 * 10111011 = 10111011

state_matrix[0][3] = (0)⊕(1)⊕(2)⊕(3)
  01001110⊕
  11000111⊕
  10111010⊕
  10111011
= 10001000 | 136 | 88

(1,0)*(0,0) => (0) = 1 * 11010 = 11010
(1,1)*(1,0) => (1) = 2*91 = 10 * 1011011 = 10110110
(1,2)*(2,0) => (2) = (2*233)⊕233 = 111010010 ⊕ 11101001 = 100000
(1,3)*(3,0) => (3) = 1 * 10011010 = 10011010

state_matrix[1][0] = (0)⊕(1)⊕(2)⊕(3)
  00011010⊕
  10110110⊕
  00100000⊕
  10011010
= 00010110 | 22 | 16

(1,0)*(0,1) => (0) = 1 * 10101011 = 10101011
(1,1)*(1,1) => (1) = 2*48 = 10 * 110000 = 1100000
(1,2)*(2,1) => (2) = (2*210)⊕210 = 110100100 ⊕ 11010010 = 1101101
(1,3)*(3,1) => (3) = 1 * 10101010 = 10101010

state_matrix[1][1] = (0)⊕(1)⊕(2)⊕(3)
  10101011⊕
  01100000⊕
  01101101⊕
  10101010
= 00001100 | 12 | 0c

(1,0)*(0,2) => (0) = 1 * 1 = 1
(1,1)*(1,2) => (1) = 2*65 = 10 * 1000001 = 10000010
(1,2)*(2,2) => (2) = (2*211)⊕211 = 110100110 ⊕ 11010011 = 1101110
(1,3)*(3,2) => (3) = 1 * 11101000 = 11101000

state_matrix[1][2] = (0)⊕(1)⊕(2)⊕(3)
  00000001⊕
  10000010⊕
  01101110⊕
  11101000
= 00000101 | 5 | 05

(1,0)*(0,3) => (0) = 1 * 100111 = 100111
(1,1)*(1,3) => (1) = 2*180 = 10 * 10110100 = 1110011
(1,2)*(2,3) => (2) = (2*186)⊕186 = 101110100 ⊕ 10111010 = 11010101
(1,3)*(3,3) => (3) = 1 * 10111011 = 10111011

state_matrix[1][3] = (0)⊕(1)⊕(2)⊕(3)
  00100111⊕
  01110011⊕
  11010101⊕
  10111011
= 00111010 | 58 | 3a

(2,0)*(0,0) => (0) = 1 * 11010 = 11010
(2,1)*(1,0) => (1) = 1 * 1011011 = 1011011
(2,2)*(2,0) => (2) = 2*233 = 10 * 11101001 = 11001001
(2,3)*(3,0) => (3) = (2*154)⊕154 = 100110100 ⊕ 10011010 = 10110101

state_matrix[2][0] = (0)⊕(1)⊕(2)⊕(3)
  00011010⊕
  01011011⊕
  11001001⊕
  10110101
= 00111101 | 61 | 3d

(2,0)*(0,1) => (0) = 1 * 10101011 = 10101011
(2,1)*(1,1) => (1) = 1 * 110000 = 110000
(2,2)*(2,1) => (2) = 2*210 = 10 * 11010010 = 10111111
(2,3)*(3,1) => (3) = (2*170)⊕170 = 101010100 ⊕ 10101010 = 11100101

state_matrix[2][1] = (0)⊕(1)⊕(2)⊕(3)
  10101011⊕
  00110000⊕
  10111111⊕
  11100101
= 11000001 | 193 | c1

(2,0)*(0,2) => (0) = 1 * 1 = 1
(2,1)*(1,2) => (1) = 1 * 1000001 = 1000001
(2,2)*(2,2) => (2) = 2*211 = 10 * 11010011 = 10111101
(2,3)*(3,2) => (3) = (2*232)⊕232 = 111010000 ⊕ 11101000 = 100011

state_matrix[2][2] = (0)⊕(1)⊕(2)⊕(3)
  00000001⊕
  01000001⊕
  10111101⊕
  00100011
= 11011110 | 222 | de

(2,0)*(0,3) => (0) = 1 * 100111 = 100111
(2,1)*(1,3) => (1) = 1 * 10110100 = 10110100
(2,2)*(2,3) => (2) = 2*186 = 10 * 10111010 = 1101111
(2,3)*(3,3) => (3) = (2*187)⊕187 = 101110110 ⊕ 10111011 = 11010110

state_matrix[2][3] = (0)⊕(1)⊕(2)⊕(3)
  00100111⊕
  10110100⊕
  01101111⊕
  11010110
= 00101010 | 42 | 2a

(3,0)*(0,0) => (0) = (2*26)⊕26 = 110100 ⊕ 11010 = 101110
(3,1)*(1,0) => (1) = 1 * 1011011 = 1011011
(3,2)*(2,0) => (2) = 1 * 11101001 = 11101001
(3,3)*(3,0) => (3) = 2*154 = 10 * 10011010 = 101111

state_matrix[3][0] = (0)⊕(1)⊕(2)⊕(3)
  00101110⊕
  01011011⊕
  11101001⊕
  00101111
= 10110011 | 179 | b3

(3,0)*(0,1) => (0) = (2*171)⊕171 = 101010110 ⊕ 10101011 = 11100110
(3,1)*(1,1) => (1) = 1 * 110000 = 110000
(3,2)*(2,1) => (2) = 1 * 11010010 = 11010010
(3,3)*(3,1) => (3) = 2*170 = 10 * 10101010 = 1001111

state_matrix[3][1] = (0)⊕(1)⊕(2)⊕(3)
  11100110⊕
  00110000⊕
  11010010⊕
  01001111
= 01001011 | 75 | 4b

(3,0)*(0,2) => (0) = (2*1)⊕1 = 10 ⊕ 1 = 11
(3,1)*(1,2) => (1) = 1 * 1000001 = 1000001
(3,2)*(2,2) => (2) = 1 * 11010011 = 11010011
(3,3)*(3,2) => (3) = 2*232 = 10 * 11101000 = 11001011

state_matrix[3][2] = (0)⊕(1)⊕(2)⊕(3)
  00000011⊕
  01000001⊕
  11010011⊕
  11001011
= 01011010 | 90 | 5a

(3,0)*(0,3) => (0) = (2*39)⊕39 = 1001110 ⊕ 100111 = 1101001
(3,1)*(1,3) => (1) = 1 * 10110100 = 10110100
(3,2)*(2,3) => (2) = 1 * 10111010 = 10111010
(3,3)*(3,3) => (3) = 2*187 = 10 * 10111011 = 1101101

state_matrix[3][3] = (0)⊕(1)⊕(2)⊕(3)
  01101001⊕
  10110100⊕
  10111010⊕
  01101101
= 00001010 | 10 | 0a

=======>state_matrix<=======
aa  65  fa  88
16  0c  05  3a
3d  c1  de  2a
b3  4b  5a  0a
 4) ⊕ RK_matrix_3
d2  15  63  c3
60  7a  39  03
0d  bc  e9  1e
e7  68  01  fb
=======>state_matrix<=======
78  70  99  4b
76  76  3c  39
30  7d  37  34
54  23  5b  f1
=======> CIPHERTEXT: 78 76 30 54 70 76 7d 23 99 3c 37 5b 4b 39 34 f1 

Add Roundkey Round 4 ===============================================
 state_matrix:
78  70  99  4b
76  76  3c  39
30  7d  37  34
54  23  5b  f1
 1) Substitution S-box =>
bc  51  ee  b3
38  38  eb  12
04  ff  9a  18
20  26  39  a1
 2) Rows are shifted <left by offsets of 0,1,2, and 3 =>
bc  51  ee  b3
38  eb  12  38
9a  18  04  ff
a1  20  26  39

 3) Mix Column:
multiplies 'fixed_matrix' ⊕ state_matrix
 i_j   i_j
(0,0)*(0,0) => (0) = 2*188 = 10 * 10111100 = 1100011
(0,1)*(1,0) => (1) = (2*56)⊕56 = 1110000 ⊕ 111000 = 1001000
(0,2)*(2,0) => (2) = 1 * 10011010 = 10011010
(0,3)*(3,0) => (3) = 1 * 10100001 = 10100001

state_matrix[0][0] = (0)⊕(1)⊕(2)⊕(3)
  01100011⊕
  01001000⊕
  10011010⊕
  10100001
= 00010000 | 16 | 10

(0,0)*(0,1) => (0) = 2*81 = 10 * 1010001 = 10100010
(0,1)*(1,1) => (1) = (2*235)⊕235 = 111010110 ⊕ 11101011 = 100110
(0,2)*(2,1) => (2) = 1 * 11000 = 11000
(0,3)*(3,1) => (3) = 1 * 100000 = 100000

state_matrix[0][1] = (0)⊕(1)⊕(2)⊕(3)
  10100010⊕
  00100110⊕
  00011000⊕
  00100000
= 10111100 | 188 | bc

(0,0)*(0,2) => (0) = 2*238 = 10 * 11101110 = 11000111
(0,1)*(1,2) => (1) = (2*18)⊕18 = 100100 ⊕ 10010 = 110110
(0,2)*(2,2) => (2) = 1 * 100 = 100
(0,3)*(3,2) => (3) = 1 * 100110 = 100110

state_matrix[0][2] = (0)⊕(1)⊕(2)⊕(3)
  11000111⊕
  00110110⊕
  00000100⊕
  00100110
= 11010011 | 211 | d3

(0,0)*(0,3) => (0) = 2*179 = 10 * 10110011 = 1111101
(0,1)*(1,3) => (1) = (2*56)⊕56 = 1110000 ⊕ 111000 = 1001000
(0,2)*(2,3) => (2) = 1 * 11111111 = 11111111
(0,3)*(3,3) => (3) = 1 * 111001 = 111001

state_matrix[0][3] = (0)⊕(1)⊕(2)⊕(3)
  01111101⊕
  01001000⊕
  11111111⊕
  00111001
= 11110011 | 243 | f3

(1,0)*(0,0) => (0) = 1 * 10111100 = 10111100
(1,1)*(1,0) => (1) = 2*56 = 10 * 111000 = 1110000
(1,2)*(2,0) => (2) = (2*154)⊕154 = 100110100 ⊕ 10011010 = 10110101
(1,3)*(3,0) => (3) = 1 * 10100001 = 10100001

state_matrix[1][0] = (0)⊕(1)⊕(2)⊕(3)
  10111100⊕
  01110000⊕
  10110101⊕
  10100001
= 11011000 | 216 | d8

(1,0)*(0,1) => (0) = 1 * 1010001 = 1010001
(1,1)*(1,1) => (1) = 2*235 = 10 * 11101011 = 11001101
(1,2)*(2,1) => (2) = (2*24)⊕24 = 110000 ⊕ 11000 = 101000
(1,3)*(3,1) => (3) = 1 * 100000 = 100000

state_matrix[1][1] = (0)⊕(1)⊕(2)⊕(3)
  01010001⊕
  11001101⊕
  00101000⊕
  00100000
= 10010100 | 148 | 94

(1,0)*(0,2) => (0) = 1 * 11101110 = 11101110
(1,1)*(1,2) => (1) = 2*18 = 10 * 10010 = 100100
(1,2)*(2,2) => (2) = (2*4)⊕4 = 1000 ⊕ 100 = 1100
(1,3)*(3,2) => (3) = 1 * 100110 = 100110

state_matrix[1][2] = (0)⊕(1)⊕(2)⊕(3)
  11101110⊕
  00100100⊕
  00001100⊕
  00100110
= 11100000 | 224 | e0

(1,0)*(0,3) => (0) = 1 * 10110011 = 10110011
(1,1)*(1,3) => (1) = 2*56 = 10 * 111000 = 1110000
(1,2)*(2,3) => (2) = (2*255)⊕255 = 111111110 ⊕ 11111111 = 11010
(1,3)*(3,3) => (3) = 1 * 111001 = 111001

state_matrix[1][3] = (0)⊕(1)⊕(2)⊕(3)
  10110011⊕
  01110000⊕
  00011010⊕
  00111001
= 11100000 | 224 | e0

(2,0)*(0,0) => (0) = 1 * 10111100 = 10111100
(2,1)*(1,0) => (1) = 1 * 111000 = 111000
(2,2)*(2,0) => (2) = 2*154 = 10 * 10011010 = 101111
(2,3)*(3,0) => (3) = (2*161)⊕161 = 101000010 ⊕ 10100001 = 11111000

state_matrix[2][0] = (0)⊕(1)⊕(2)⊕(3)
  10111100⊕
  00111000⊕
  00101111⊕
  11111000
= 01010011 | 83 | 53

(2,0)*(0,1) => (0) = 1 * 1010001 = 1010001
(2,1)*(1,1) => (1) = 1 * 11101011 = 11101011
(2,2)*(2,1) => (2) = 2*24 = 10 * 11000 = 110000
(2,3)*(3,1) => (3) = (2*32)⊕32 = 1000000 ⊕ 100000 = 1100000

state_matrix[2][1] = (0)⊕(1)⊕(2)⊕(3)
  01010001⊕
  11101011⊕
  00110000⊕
  01100000
= 11101010 | 234 | ea

(2,0)*(0,2) => (0) = 1 * 11101110 = 11101110
(2,1)*(1,2) => (1) = 1 * 10010 = 10010
(2,2)*(2,2) => (2) = 2*4 = 10 * 100 = 1000
(2,3)*(3,2) => (3) = (2*38)⊕38 = 1001100 ⊕ 100110 = 1101010

state_matrix[2][2] = (0)⊕(1)⊕(2)⊕(3)
  11101110⊕
  00010010⊕
  00001000⊕
  01101010
= 10011110 | 158 | 9e

(2,0)*(0,3) => (0) = 1 * 10110011 = 10110011
(2,1)*(1,3) => (1) = 1 * 111000 = 111000
(2,2)*(2,3) => (2) = 2*255 = 10 * 11111111 = 11100101
(2,3)*(3,3) => (3) = (2*57)⊕57 = 1110010 ⊕ 111001 = 1001011

state_matrix[2][3] = (0)⊕(1)⊕(2)⊕(3)
  10110011⊕
  00111000⊕
  11100101⊕
  01001011
= 00100101 | 37 | 25

(3,0)*(0,0) => (0) = (2*188)⊕188 = 101111000 ⊕ 10111100 = 11011111
(3,1)*(1,0) => (1) = 1 * 111000 = 111000
(3,2)*(2,0) => (2) = 1 * 10011010 = 10011010
(3,3)*(3,0) => (3) = 2*161 = 10 * 10100001 = 1011001

state_matrix[3][0] = (0)⊕(1)⊕(2)⊕(3)
  11011111⊕
  00111000⊕
  10011010⊕
  01011001
= 00100100 | 36 | 24

(3,0)*(0,1) => (0) = (2*81)⊕81 = 10100010 ⊕ 1010001 = 11110011
(3,1)*(1,1) => (1) = 1 * 11101011 = 11101011
(3,2)*(2,1) => (2) = 1 * 11000 = 11000
(3,3)*(3,1) => (3) = 2*32 = 10 * 100000 = 1000000

state_matrix[3][1] = (0)⊕(1)⊕(2)⊕(3)
  11110011⊕
  11101011⊕
  00011000⊕
  01000000
= 01000000 | 64 | 40

(3,0)*(0,2) => (0) = (2*238)⊕238 = 111011100 ⊕ 11101110 = 101001
(3,1)*(1,2) => (1) = 1 * 10010 = 10010
(3,2)*(2,2) => (2) = 1 * 100 = 100
(3,3)*(3,2) => (3) = 2*38 = 10 * 100110 = 1001100

state_matrix[3][2] = (0)⊕(1)⊕(2)⊕(3)
  00101001⊕
  00010010⊕
  00000100⊕
  01001100
= 01110011 | 115 | 73

(3,0)*(0,3) => (0) = (2*179)⊕179 = 101100110 ⊕ 10110011 = 11001110
(3,1)*(1,3) => (1) = 1 * 111000 = 111000
(3,2)*(2,3) => (2) = 1 * 11111111 = 11111111
(3,3)*(3,3) => (3) = 2*57 = 10 * 111001 = 1110010

state_matrix[3][3] = (0)⊕(1)⊕(2)⊕(3)
  11001110⊕
  00111000⊕
  11111111⊕
  01110010
= 01111011 | 123 | 7b

=======>state_matrix<=======
10  bc  d3  f3
d8  94  e0  e0
53  ea  9e  25
24  40  73  7b
 4) ⊕ RK_matrix_4
a1  b4  d7  14
12  68  51  52
02  be  57  49
c9  a1  a0  5b
=======>state_matrix<=======
b1  08  04  e7
ca  fc  b1  b2
51  54  c9  6c
ed  e1  d3  20
=======> CIPHERTEXT: b1 ca 51 ed 08 fc 54 e1 04 b1 c9 d3 e7 b2 6c 20 

Add Roundkey Round 5 ===============================================
 state_matrix:
b1  08  04  e7
ca  fc  b1  b2
51  54  c9  6c
ed  e1  d3  20
 1) Substitution S-box =>
c8  30  f2  94
74  b0  c8  37
d1  20  dd  50
55  f8  66  b7
 2) Rows are shifted <left by offsets of 0,1,2, and 3 =>
c8  30  f2  94
b0  c8  37  74
dd  50  d1  20
b7  55  f8  66

 3) Mix Column:
multiplies 'fixed_matrix' ⊕ state_matrix
 i_j   i_j
(0,0)*(0,0) => (0) = 2*200 = 10 * 11001000 = 10001011
(0,1)*(1,0) => (1) = (2*176)⊕176 = 101100000 ⊕ 10110000 = 11001011
(0,2)*(2,0) => (2) = 1 * 11011101 = 11011101
(0,3)*(3,0) => (3) = 1 * 10110111 = 10110111

state_matrix[0][0] = (0)⊕(1)⊕(2)⊕(3)
  10001011⊕
  11001011⊕
  11011101⊕
  10110111
= 00101010 | 42 | 2a

(0,0)*(0,1) => (0) = 2*48 = 10 * 110000 = 1100000
(0,1)*(1,1) => (1) = (2*200)⊕200 = 110010000 ⊕ 11001000 = 1000011
(0,2)*(2,1) => (2) = 1 * 1010000 = 1010000
(0,3)*(3,1) => (3) = 1 * 1010101 = 1010101

state_matrix[0][1] = (0)⊕(1)⊕(2)⊕(3)
  01100000⊕
  01000011⊕
  01010000⊕
  01010101
= 00100110 | 38 | 26

(0,0)*(0,2) => (0) = 2*242 = 10 * 11110010 = 11111111
(0,1)*(1,2) => (1) = (2*55)⊕55 = 1101110 ⊕ 110111 = 1011001
(0,2)*(2,2) => (2) = 1 * 11010001 = 11010001
(0,3)*(3,2) => (3) = 1 * 11111000 = 11111000

state_matrix[0][2] = (0)⊕(1)⊕(2)⊕(3)
  11111111⊕
  01011001⊕
  11010001⊕
  11111000
= 10001111 | 143 | 8f

(0,0)*(0,3) => (0) = 2*148 = 10 * 10010100 = 110011
(0,1)*(1,3) => (1) = (2*116)⊕116 = 11101000 ⊕ 1110100 = 10011100
(0,2)*(2,3) => (2) = 1 * 100000 = 100000
(0,3)*(3,3) => (3) = 1 * 1100110 = 1100110

state_matrix[0][3] = (0)⊕(1)⊕(2)⊕(3)
  00110011⊕
  10011100⊕
  00100000⊕
  01100110
= 11101001 | 233 | e9

(1,0)*(0,0) => (0) = 1 * 11001000 = 11001000
(1,1)*(1,0) => (1) = 2*176 = 10 * 10110000 = 1111011
(1,2)*(2,0) => (2) = (2*221)⊕221 = 110111010 ⊕ 11011101 = 1111100
(1,3)*(3,0) => (3) = 1 * 10110111 = 10110111

state_matrix[1][0] = (0)⊕(1)⊕(2)⊕(3)
  11001000⊕
  01111011⊕
  01111100⊕
  10110111
= 01111000 | 120 | 78

(1,0)*(0,1) => (0) = 1 * 110000 = 110000
(1,1)*(1,1) => (1) = 2*200 = 10 * 11001000 = 10001011
(1,2)*(2,1) => (2) = (2*80)⊕80 = 10100000 ⊕ 1010000 = 11110000
(1,3)*(3,1) => (3) = 1 * 1010101 = 1010101

state_matrix[1][1] = (0)⊕(1)⊕(2)⊕(3)
  00110000⊕
  10001011⊕
  11110000⊕
  01010101
= 00011110 | 30 | 1e

(1,0)*(0,2) => (0) = 1 * 11110010 = 11110010
(1,1)*(1,2) => (1) = 2*55 = 10 * 110111 = 1101110
(1,2)*(2,2) => (2) = (2*209)⊕209 = 110100010 ⊕ 11010001 = 1101000
(1,3)*(3,2) => (3) = 1 * 11111000 = 11111000

state_matrix[1][2] = (0)⊕(1)⊕(2)⊕(3)
  11110010⊕
  01101110⊕
  01101000⊕
  11111000
= 00001100 | 12 | 0c

(1,0)*(0,3) => (0) = 1 * 10010100 = 10010100
(1,1)*(1,3) => (1) = 2*116 = 10 * 1110100 = 11101000
(1,2)*(2,3) => (2) = (2*32)⊕32 = 1000000 ⊕ 100000 = 1100000
(1,3)*(3,3) => (3) = 1 * 1100110 = 1100110

state_matrix[1][3] = (0)⊕(1)⊕(2)⊕(3)
  10010100⊕
  11101000⊕
  01100000⊕
  01100110
= 01111010 | 122 | 7a

(2,0)*(0,0) => (0) = 1 * 11001000 = 11001000
(2,1)*(1,0) => (1) = 1 * 10110000 = 10110000
(2,2)*(2,0) => (2) = 2*221 = 10 * 11011101 = 10100001
(2,3)*(3,0) => (3) = (2*183)⊕183 = 101101110 ⊕ 10110111 = 11000010

state_matrix[2][0] = (0)⊕(1)⊕(2)⊕(3)
  11001000⊕
  10110000⊕
  10100001⊕
  11000010
= 00011011 | 27 | 1b

(2,0)*(0,1) => (0) = 1 * 110000 = 110000
(2,1)*(1,1) => (1) = 1 * 11001000 = 11001000
(2,2)*(2,1) => (2) = 2*80 = 10 * 1010000 = 10100000
(2,3)*(3,1) => (3) = (2*85)⊕85 = 10101010 ⊕ 1010101 = 11111111

state_matrix[2][1] = (0)⊕(1)⊕(2)⊕(3)
  00110000⊕
  11001000⊕
  10100000⊕
  11111111
= 10100111 | 167 | a7

(2,0)*(0,2) => (0) = 1 * 11110010 = 11110010
(2,1)*(1,2) => (1) = 1 * 110111 = 110111
(2,2)*(2,2) => (2) = 2*209 = 10 * 11010001 = 10111001
(2,3)*(3,2) => (3) = (2*248)⊕248 = 111110000 ⊕ 11111000 = 10011

state_matrix[2][2] = (0)⊕(1)⊕(2)⊕(3)
  11110010⊕
  00110111⊕
  10111001⊕
  00010011
= 01101111 | 111 | 6f

(2,0)*(0,3) => (0) = 1 * 10010100 = 10010100
(2,1)*(1,3) => (1) = 1 * 1110100 = 1110100
(2,2)*(2,3) => (2) = 2*32 = 10 * 100000 = 1000000
(2,3)*(3,3) => (3) = (2*102)⊕102 = 11001100 ⊕ 1100110 = 10101010

state_matrix[2][3] = (0)⊕(1)⊕(2)⊕(3)
  10010100⊕
  01110100⊕
  01000000⊕
  10101010
= 00001010 | 10 | 0a

(3,0)*(0,0) => (0) = (2*200)⊕200 = 110010000 ⊕ 11001000 = 1000011
(3,1)*(1,0) => (1) = 1 * 10110000 = 10110000
(3,2)*(2,0) => (2) = 1 * 11011101 = 11011101
(3,3)*(3,0) => (3) = 2*183 = 10 * 10110111 = 1110101

state_matrix[3][0] = (0)⊕(1)⊕(2)⊕(3)
  01000011⊕
  10110000⊕
  11011101⊕
  01110101
= 01011011 | 91 | 5b

(3,0)*(0,1) => (0) = (2*48)⊕48 = 1100000 ⊕ 110000 = 1010000
(3,1)*(1,1) => (1) = 1 * 11001000 = 11001000
(3,2)*(2,1) => (2) = 1 * 1010000 = 1010000
(3,3)*(3,1) => (3) = 2*85 = 10 * 1010101 = 10101010

state_matrix[3][1] = (0)⊕(1)⊕(2)⊕(3)
  01010000⊕
  11001000⊕
  01010000⊕
  10101010
= 01100010 | 98 | 62

(3,0)*(0,2) => (0) = (2*242)⊕242 = 111100100 ⊕ 11110010 = 1101
(3,1)*(1,2) => (1) = 1 * 110111 = 110111
(3,2)*(2,2) => (2) = 1 * 11010001 = 11010001
(3,3)*(3,2) => (3) = 2*248 = 10 * 11111000 = 11101011

state_matrix[3][2] = (0)⊕(1)⊕(2)⊕(3)
  00001101⊕
  00110111⊕
  11010001⊕
  11101011
= 00000000 | 0 | 00

(3,0)*(0,3) => (0) = (2*148)⊕148 = 100101000 ⊕ 10010100 = 10100111
(3,1)*(1,3) => (1) = 1 * 1110100 = 1110100
(3,2)*(2,3) => (2) = 1 * 100000 = 100000
(3,3)*(3,3) => (3) = 2*102 = 10 * 1100110 = 11001100

state_matrix[3][3] = (0)⊕(1)⊕(2)⊕(3)
  10100111⊕
  01110100⊕
  00100000⊕
  11001100
= 00111111 | 63 | 3f

=======>state_matrix<=======
2a  26  8f  e9
78  1e  0c  7a
1b  a7  6f  0a
5b  62  00  3f
 4) ⊕ RK_matrix_5
b1  05  d2  c6
29  41  10  42
3b  85  d2  9b
33  92  32  69
=======>state_matrix<=======
9b  23  5d  2f
51  5f  1c  38
20  22  bd  91
68  f0  32  56
=======> CIPHERTEXT: 9b 51 20 68 23 5f 22 f0 5d 1c bd 32 2f 38 91 56 

Add Roundkey Round 6 ===============================================
 state_matrix:
9b  23  5d  2f
51  5f  1c  38
20  22  bd  91
68  f0  32  56
 1) Substitution S-box =>
14  26  4c  15
d1  cf  9c  07
b7  93  7a  81
45  8c  23  b1
 2) Rows are shifted <left by offsets of 0,1,2, and 3 =>
14  26  4c  15
cf  9c  07  d1
7a  81  b7  93
b1  45  8c  23

 3) Mix Column:
multiplies 'fixed_matrix' ⊕ state_matrix
 i_j   i_j
(0,0)*(0,0) => (0) = 2*20 = 10 * 10100 = 101000
(0,1)*(1,0) => (1) = (2*207)⊕207 = 110011110 ⊕ 11001111 = 1001010
(0,2)*(2,0) => (2) = 1 * 1111010 = 1111010
(0,3)*(3,0) => (3) = 1 * 10110001 = 10110001

state_matrix[0][0] = (0)⊕(1)⊕(2)⊕(3)
  00101000⊕
  01001010⊕
  01111010⊕
  10110001
= 10101001 | 169 | a9

(0,0)*(0,1) => (0) = 2*38 = 10 * 100110 = 1001100
(0,1)*(1,1) => (1) = (2*156)⊕156 = 100111000 ⊕ 10011100 = 10111111
(0,2)*(2,1) => (2) = 1 * 10000001 = 10000001
(0,3)*(3,1) => (3) = 1 * 1000101 = 1000101

state_matrix[0][1] = (0)⊕(1)⊕(2)⊕(3)
  01001100⊕
  10111111⊕
  10000001⊕
  01000101
= 00110111 | 55 | 37

(0,0)*(0,2) => (0) = 2*76 = 10 * 1001100 = 10011000
(0,1)*(1,2) => (1) = (2*7)⊕7 = 1110 ⊕ 111 = 1001
(0,2)*(2,2) => (2) = 1 * 10110111 = 10110111
(0,3)*(3,2) => (3) = 1 * 10001100 = 10001100

state_matrix[0][2] = (0)⊕(1)⊕(2)⊕(3)
  10011000⊕
  00001001⊕
  10110111⊕
  10001100
= 10101010 | 170 | aa

(0,0)*(0,3) => (0) = 2*21 = 10 * 10101 = 101010
(0,1)*(1,3) => (1) = (2*209)⊕209 = 110100010 ⊕ 11010001 = 1101000
(0,2)*(2,3) => (2) = 1 * 10010011 = 10010011
(0,3)*(3,3) => (3) = 1 * 100011 = 100011

state_matrix[0][3] = (0)⊕(1)⊕(2)⊕(3)
  00101010⊕
  01101000⊕
  10010011⊕
  00100011
= 11110010 | 242 | f2

(1,0)*(0,0) => (0) = 1 * 10100 = 10100
(1,1)*(1,0) => (1) = 2*207 = 10 * 11001111 = 10000101
(1,2)*(2,0) => (2) = (2*122)⊕122 = 11110100 ⊕ 1111010 = 10001110
(1,3)*(3,0) => (3) = 1 * 10110001 = 10110001

state_matrix[1][0] = (0)⊕(1)⊕(2)⊕(3)
  00010100⊕
  10000101⊕
  10001110⊕
  10110001
= 10101110 | 174 | ae

(1,0)*(0,1) => (0) = 1 * 100110 = 100110
(1,1)*(1,1) => (1) = 2*156 = 10 * 10011100 = 100011
(1,2)*(2,1) => (2) = (2*129)⊕129 = 100000010 ⊕ 10000001 = 10011000
(1,3)*(3,1) => (3) = 1 * 1000101 = 1000101

state_matrix[1][1] = (0)⊕(1)⊕(2)⊕(3)
  00100110⊕
  00100011⊕
  10011000⊕
  01000101
= 11011000 | 216 | d8

(1,0)*(0,2) => (0) = 1 * 1001100 = 1001100
(1,1)*(1,2) => (1) = 2*7 = 10 * 111 = 1110
(1,2)*(2,2) => (2) = (2*183)⊕183 = 101101110 ⊕ 10110111 = 11000010
(1,3)*(3,2) => (3) = 1 * 10001100 = 10001100

state_matrix[1][2] = (0)⊕(1)⊕(2)⊕(3)
  01001100⊕
  00001110⊕
  11000010⊕
  10001100
= 00001100 | 12 | 0c

(1,0)*(0,3) => (0) = 1 * 10101 = 10101
(1,1)*(1,3) => (1) = 2*209 = 10 * 11010001 = 10111001
(1,2)*(2,3) => (2) = (2*147)⊕147 = 100100110 ⊕ 10010011 = 10101110
(1,3)*(3,3) => (3) = 1 * 100011 = 100011

state_matrix[1][3] = (0)⊕(1)⊕(2)⊕(3)
  00010101⊕
  10111001⊕
  10101110⊕
  00100011
= 00100001 | 33 | 21

(2,0)*(0,0) => (0) = 1 * 10100 = 10100
(2,1)*(1,0) => (1) = 1 * 11001111 = 11001111
(2,2)*(2,0) => (2) = 2*122 = 10 * 1111010 = 11110100
(2,3)*(3,0) => (3) = (2*177)⊕177 = 101100010 ⊕ 10110001 = 11001000

state_matrix[2][0] = (0)⊕(1)⊕(2)⊕(3)
  00010100⊕
  11001111⊕
  11110100⊕
  11001000
= 11100111 | 231 | e7

(2,0)*(0,1) => (0) = 1 * 100110 = 100110
(2,1)*(1,1) => (1) = 1 * 10011100 = 10011100
(2,2)*(2,1) => (2) = 2*129 = 10 * 10000001 = 11001
(2,3)*(3,1) => (3) = (2*69)⊕69 = 10001010 ⊕ 1000101 = 11001111

state_matrix[2][1] = (0)⊕(1)⊕(2)⊕(3)
  00100110⊕
  10011100⊕
  00011001⊕
  11001111
= 01101100 | 108 | 6c

(2,0)*(0,2) => (0) = 1 * 1001100 = 1001100
(2,1)*(1,2) => (1) = 1 * 111 = 111
(2,2)*(2,2) => (2) = 2*183 = 10 * 10110111 = 1110101
(2,3)*(3,2) => (3) = (2*140)⊕140 = 100011000 ⊕ 10001100 = 10001111

state_matrix[2][2] = (0)⊕(1)⊕(2)⊕(3)
  01001100⊕
  00000111⊕
  01110101⊕
  10001111
= 10110001 | 177 | b1

(2,0)*(0,3) => (0) = 1 * 10101 = 10101
(2,1)*(1,3) => (1) = 1 * 11010001 = 11010001
(2,2)*(2,3) => (2) = 2*147 = 10 * 10010011 = 111101
(2,3)*(3,3) => (3) = (2*35)⊕35 = 1000110 ⊕ 100011 = 1100101

state_matrix[2][3] = (0)⊕(1)⊕(2)⊕(3)
  00010101⊕
  11010001⊕
  00111101⊕
  01100101
= 10011100 | 156 | 9c

(3,0)*(0,0) => (0) = (2*20)⊕20 = 101000 ⊕ 10100 = 111100
(3,1)*(1,0) => (1) = 1 * 11001111 = 11001111
(3,2)*(2,0) => (2) = 1 * 1111010 = 1111010
(3,3)*(3,0) => (3) = 2*177 = 10 * 10110001 = 1111001

state_matrix[3][0] = (0)⊕(1)⊕(2)⊕(3)
  00111100⊕
  11001111⊕
  01111010⊕
  01111001
= 11110000 | 240 | f0

(3,0)*(0,1) => (0) = (2*38)⊕38 = 1001100 ⊕ 100110 = 1101010
(3,1)*(1,1) => (1) = 1 * 10011100 = 10011100
(3,2)*(2,1) => (2) = 1 * 10000001 = 10000001
(3,3)*(3,1) => (3) = 2*69 = 10 * 1000101 = 10001010

state_matrix[3][1] = (0)⊕(1)⊕(2)⊕(3)
  01101010⊕
  10011100⊕
  10000001⊕
  10001010
= 11111101 | 253 | fd

(3,0)*(0,2) => (0) = (2*76)⊕76 = 10011000 ⊕ 1001100 = 11010100
(3,1)*(1,2) => (1) = 1 * 111 = 111
(3,2)*(2,2) => (2) = 1 * 10110111 = 10110111
(3,3)*(3,2) => (3) = 2*140 = 10 * 10001100 = 11

state_matrix[3][2] = (0)⊕(1)⊕(2)⊕(3)
  11010100⊕
  00000111⊕
  10110111⊕
  00000011
= 01100111 | 103 | 67

(3,0)*(0,3) => (0) = (2*21)⊕21 = 101010 ⊕ 10101 = 111111
(3,1)*(1,3) => (1) = 1 * 11010001 = 11010001
(3,2)*(2,3) => (2) = 1 * 10010011 = 10010011
(3,3)*(3,3) => (3) = 2*35 = 10 * 100011 = 1000110

state_matrix[3][3] = (0)⊕(1)⊕(2)⊕(3)
  00111111⊕
  11010001⊕
  10010011⊕
  01000110
= 00111011 | 59 | 3b

=======>state_matrix<=======
a9  37  aa  f2
ae  d8  0c  21
e7  6c  b1  9c
f0  fd  67  3b
 4) ⊕ RK_matrix_6
bd  b8  6a  ac
3d  7c  6c  2e
c2  47  95  0e
87  15  27  4e
=======>state_matrix<=======
14  8f  c0  5e
93  a4  60  0f
25  2b  24  92
77  e8  40  75
=======> CIPHERTEXT: 14 93 25 77 8f a4 2b e8 c0 60 24 40 5e 0f 92 75 

Add Roundkey Round 7 ===============================================
 state_matrix:
14  8f  c0  5e
93  a4  60  0f
25  2b  24  92
77  e8  40  75
 1) Substitution S-box =>
fa  73  ba  58
dc  49  d0  76
3f  f1  36  4f
f5  9b  09  9d
 2) Rows are shifted <left by offsets of 0,1,2, and 3 =>
fa  73  ba  58
49  d0  76  dc
36  4f  3f  f1
9d  f5  9b  09

 3) Mix Column:
multiplies 'fixed_matrix' ⊕ state_matrix
 i_j   i_j
(0,0)*(0,0) => (0) = 2*250 = 10 * 11111010 = 11101111
(0,1)*(1,0) => (1) = (2*73)⊕73 = 10010010 ⊕ 1001001 = 11011011
(0,2)*(2,0) => (2) = 1 * 110110 = 110110
(0,3)*(3,0) => (3) = 1 * 10011101 = 10011101

state_matrix[0][0] = (0)⊕(1)⊕(2)⊕(3)
  11101111⊕
  11011011⊕
  00110110⊕
  10011101
= 10011111 | 159 | 9f

(0,0)*(0,1) => (0) = 2*115 = 10 * 1110011 = 11100110
(0,1)*(1,1) => (1) = (2*208)⊕208 = 110100000 ⊕ 11010000 = 1101011
(0,2)*(2,1) => (2) = 1 * 1001111 = 1001111
(0,3)*(3,1) => (3) = 1 * 11110101 = 11110101

state_matrix[0][1] = (0)⊕(1)⊕(2)⊕(3)
  11100110⊕
  01101011⊕
  01001111⊕
  11110101
= 00110111 | 55 | 37

(0,0)*(0,2) => (0) = 2*186 = 10 * 10111010 = 1101111
(0,1)*(1,2) => (1) = (2*118)⊕118 = 11101100 ⊕ 1110110 = 10011010
(0,2)*(2,2) => (2) = 1 * 111111 = 111111
(0,3)*(3,2) => (3) = 1 * 10011011 = 10011011

state_matrix[0][2] = (0)⊕(1)⊕(2)⊕(3)
  01101111⊕
  10011010⊕
  00111111⊕
  10011011
= 01010001 | 81 | 51

(0,0)*(0,3) => (0) = 2*88 = 10 * 1011000 = 10110000
(0,1)*(1,3) => (1) = (2*220)⊕220 = 110111000 ⊕ 11011100 = 1111111
(0,2)*(2,3) => (2) = 1 * 11110001 = 11110001
(0,3)*(3,3) => (3) = 1 * 1001 = 1001

state_matrix[0][3] = (0)⊕(1)⊕(2)⊕(3)
  10110000⊕
  01111111⊕
  11110001⊕
  00001001
= 00110111 | 55 | 37

(1,0)*(0,0) => (0) = 1 * 11111010 = 11111010
(1,1)*(1,0) => (1) = 2*73 = 10 * 1001001 = 10010010
(1,2)*(2,0) => (2) = (2*54)⊕54 = 1101100 ⊕ 110110 = 1011010
(1,3)*(3,0) => (3) = 1 * 10011101 = 10011101

state_matrix[1][0] = (0)⊕(1)⊕(2)⊕(3)
  11111010⊕
  10010010⊕
  01011010⊕
  10011101
= 10101111 | 175 | af

(1,0)*(0,1) => (0) = 1 * 1110011 = 1110011
(1,1)*(1,1) => (1) = 2*208 = 10 * 11010000 = 10111011
(1,2)*(2,1) => (2) = (2*79)⊕79 = 10011110 ⊕ 1001111 = 11010001
(1,3)*(3,1) => (3) = 1 * 11110101 = 11110101

state_matrix[1][1] = (0)⊕(1)⊕(2)⊕(3)
  01110011⊕
  10111011⊕
  11010001⊕
  11110101
= 11101100 | 236 | ec

(1,0)*(0,2) => (0) = 1 * 10111010 = 10111010
(1,1)*(1,2) => (1) = 2*118 = 10 * 1110110 = 11101100
(1,2)*(2,2) => (2) = (2*63)⊕63 = 1111110 ⊕ 111111 = 1000001
(1,3)*(3,2) => (3) = 1 * 10011011 = 10011011

state_matrix[1][2] = (0)⊕(1)⊕(2)⊕(3)
  10111010⊕
  11101100⊕
  01000001⊕
  10011011
= 10001100 | 140 | 8c

(1,0)*(0,3) => (0) = 1 * 1011000 = 1011000
(1,1)*(1,3) => (1) = 2*220 = 10 * 11011100 = 10100011
(1,2)*(2,3) => (2) = (2*241)⊕241 = 111100010 ⊕ 11110001 = 1000
(1,3)*(3,3) => (3) = 1 * 1001 = 1001

state_matrix[1][3] = (0)⊕(1)⊕(2)⊕(3)
  01011000⊕
  10100011⊕
  00001000⊕
  00001001
= 11111010 | 250 | fa

(2,0)*(0,0) => (0) = 1 * 11111010 = 11111010
(2,1)*(1,0) => (1) = 1 * 1001001 = 1001001
(2,2)*(2,0) => (2) = 2*54 = 10 * 110110 = 1101100
(2,3)*(3,0) => (3) = (2*157)⊕157 = 100111010 ⊕ 10011101 = 10111100

state_matrix[2][0] = (0)⊕(1)⊕(2)⊕(3)
  11111010⊕
  01001001⊕
  01101100⊕
  10111100
= 01100011 | 99 | 63

(2,0)*(0,1) => (0) = 1 * 1110011 = 1110011
(2,1)*(1,1) => (1) = 1 * 11010000 = 11010000
(2,2)*(2,1) => (2) = 2*79 = 10 * 1001111 = 10011110
(2,3)*(3,1) => (3) = (2*245)⊕245 = 111101010 ⊕ 11110101 = 100

state_matrix[2][1] = (0)⊕(1)⊕(2)⊕(3)
  01110011⊕
  11010000⊕
  10011110⊕
  00000100
= 00111001 | 57 | 39

(2,0)*(0,2) => (0) = 1 * 10111010 = 10111010
(2,1)*(1,2) => (1) = 1 * 1110110 = 1110110
(2,2)*(2,2) => (2) = 2*63 = 10 * 111111 = 1111110
(2,3)*(3,2) => (3) = (2*155)⊕155 = 100110110 ⊕ 10011011 = 10110110

state_matrix[2][2] = (0)⊕(1)⊕(2)⊕(3)
  10111010⊕
  01110110⊕
  01111110⊕
  10110110
= 00000100 | 4 | 04

(2,0)*(0,3) => (0) = 1 * 1011000 = 1011000
(2,1)*(1,3) => (1) = 1 * 11011100 = 11011100
(2,2)*(2,3) => (2) = 2*241 = 10 * 11110001 = 11111001
(2,3)*(3,3) => (3) = (2*9)⊕9 = 10010 ⊕ 1001 = 11011

state_matrix[2][3] = (0)⊕(1)⊕(2)⊕(3)
  01011000⊕
  11011100⊕
  11111001⊕
  00011011
= 01100110 | 102 | 66

(3,0)*(0,0) => (0) = (2*250)⊕250 = 111110100 ⊕ 11111010 = 10101
(3,1)*(1,0) => (1) = 1 * 1001001 = 1001001
(3,2)*(2,0) => (2) = 1 * 110110 = 110110
(3,3)*(3,0) => (3) = 2*157 = 10 * 10011101 = 100001

state_matrix[3][0] = (0)⊕(1)⊕(2)⊕(3)
  00010101⊕
  01001001⊕
  00110110⊕
  00100001
= 01001011 | 75 | 4b

(3,0)*(0,1) => (0) = (2*115)⊕115 = 11100110 ⊕ 1110011 = 10010101
(3,1)*(1,1) => (1) = 1 * 11010000 = 11010000
(3,2)*(2,1) => (2) = 1 * 1001111 = 1001111
(3,3)*(3,1) => (3) = 2*245 = 10 * 11110101 = 11110001

state_matrix[3][1] = (0)⊕(1)⊕(2)⊕(3)
  10010101⊕
  11010000⊕
  01001111⊕
  11110001
= 11111011 | 251 | fb

(3,0)*(0,2) => (0) = (2*186)⊕186 = 101110100 ⊕ 10111010 = 11010101
(3,1)*(1,2) => (1) = 1 * 1110110 = 1110110
(3,2)*(2,2) => (2) = 1 * 111111 = 111111
(3,3)*(3,2) => (3) = 2*155 = 10 * 10011011 = 101101

state_matrix[3][2] = (0)⊕(1)⊕(2)⊕(3)
  11010101⊕
  01110110⊕
  00111111⊕
  00101101
= 10110001 | 177 | b1

(3,0)*(0,3) => (0) = (2*88)⊕88 = 10110000 ⊕ 1011000 = 11101000
(3,1)*(1,3) => (1) = 1 * 11011100 = 11011100
(3,2)*(2,3) => (2) = 1 * 11110001 = 11110001
(3,3)*(3,3) => (3) = 2*9 = 10 * 1001 = 10010

state_matrix[3][3] = (0)⊕(1)⊕(2)⊕(3)
  11101000⊕
  11011100⊕
  11110001⊕
  00010010
= 11010111 | 215 | d7

=======>state_matrix<=======
9f  37  51  37
af  ec  8c  fa
63  39  04  66
4b  fb  b1  d7
 4) ⊕ RK_matrix_7
cc  74  1e  b2
96  ea  86  a8
ed  aa  3f  31
16  03  24  6a
=======>state_matrix<=======
53  43  4f  85
39  06  0a  52
8e  93  3b  57
5d  f8  95  bd
=======> CIPHERTEXT: 53 39 8e 5d 43 06 93 f8 4f 0a 3b 95 85 52 57 bd 

Add Roundkey Round 8 ===============================================
 state_matrix:
53  43  4f  85
39  06  0a  52
8e  93  3b  57
5d  f8  95  bd
 1) Substitution S-box =>
ed  1a  84  97
12  6f  67  00
19  dc  e2  5b
4c  41  2a  7a
 2) Rows are shifted <left by offsets of 0,1,2, and 3 =>
ed  1a  84  97
6f  67  00  12
e2  5b  19  dc
7a  4c  41  2a

 3) Mix Column:
multiplies 'fixed_matrix' ⊕ state_matrix
 i_j   i_j
(0,0)*(0,0) => (0) = 2*237 = 10 * 11101101 = 11000001
(0,1)*(1,0) => (1) = (2*111)⊕111 = 11011110 ⊕ 1101111 = 10110001
(0,2)*(2,0) => (2) = 1 * 11100010 = 11100010
(0,3)*(3,0) => (3) = 1 * 1111010 = 1111010

state_matrix[0][0] = (0)⊕(1)⊕(2)⊕(3)
  11000001⊕
  10110001⊕
  11100010⊕
  01111010
= 11101000 | 232 | e8

(0,0)*(0,1) => (0) = 2*26 = 10 * 11010 = 110100
(0,1)*(1,1) => (1) = (2*103)⊕103 = 11001110 ⊕ 1100111 = 10101001
(0,2)*(2,1) => (2) = 1 * 1011011 = 1011011
(0,3)*(3,1) => (3) = 1 * 1001100 = 1001100

state_matrix[0][1] = (0)⊕(1)⊕(2)⊕(3)
  00110100⊕
  10101001⊕
  01011011⊕
  01001100
= 10001010 | 138 | 8a

(0,0)*(0,2) => (0) = 2*132 = 10 * 10000100 = 10011
(0,1)*(1,2) => (1) = (2*0)⊕0 = 0 ⊕ 0 = 0
(0,2)*(2,2) => (2) = 1 * 11001 = 11001
(0,3)*(3,2) => (3) = 1 * 1000001 = 1000001

state_matrix[0][2] = (0)⊕(1)⊕(2)⊕(3)
  00010011⊕
  00000000⊕
  00011001⊕
  01000001
= 01001011 | 75 | 4b

(0,0)*(0,3) => (0) = 2*151 = 10 * 10010111 = 110101
(0,1)*(1,3) => (1) = (2*18)⊕18 = 100100 ⊕ 10010 = 110110
(0,2)*(2,3) => (2) = 1 * 11011100 = 11011100
(0,3)*(3,3) => (3) = 1 * 101010 = 101010

state_matrix[0][3] = (0)⊕(1)⊕(2)⊕(3)
  00110101⊕
  00110110⊕
  11011100⊕
  00101010
= 11110101 | 245 | f5

(1,0)*(0,0) => (0) = 1 * 11101101 = 11101101
(1,1)*(1,0) => (1) = 2*111 = 10 * 1101111 = 11011110
(1,2)*(2,0) => (2) = (2*226)⊕226 = 111000100 ⊕ 11100010 = 111101
(1,3)*(3,0) => (3) = 1 * 1111010 = 1111010

state_matrix[1][0] = (0)⊕(1)⊕(2)⊕(3)
  11101101⊕
  11011110⊕
  00111101⊕
  01111010
= 01110100 | 116 | 74

(1,0)*(0,1) => (0) = 1 * 11010 = 11010
(1,1)*(1,1) => (1) = 2*103 = 10 * 1100111 = 11001110
(1,2)*(2,1) => (2) = (2*91)⊕91 = 10110110 ⊕ 1011011 = 11101101
(1,3)*(3,1) => (3) = 1 * 1001100 = 1001100

state_matrix[1][1] = (0)⊕(1)⊕(2)⊕(3)
  00011010⊕
  11001110⊕
  11101101⊕
  01001100
= 01110101 | 117 | 75

(1,0)*(0,2) => (0) = 1 * 10000100 = 10000100
(1,1)*(1,2) => (1) = 2*0 = 10 * 0 = 0
(1,2)*(2,2) => (2) = (2*25)⊕25 = 110010 ⊕ 11001 = 101011
(1,3)*(3,2) => (3) = 1 * 1000001 = 1000001

state_matrix[1][2] = (0)⊕(1)⊕(2)⊕(3)
  10000100⊕
  00000000⊕
  00101011⊕
  01000001
= 11101110 | 238 | ee

(1,0)*(0,3) => (0) = 1 * 10010111 = 10010111
(1,1)*(1,3) => (1) = 2*18 = 10 * 10010 = 100100
(1,2)*(2,3) => (2) = (2*220)⊕220 = 110111000 ⊕ 11011100 = 1111111
(1,3)*(3,3) => (3) = 1 * 101010 = 101010

state_matrix[1][3] = (0)⊕(1)⊕(2)⊕(3)
  10010111⊕
  00100100⊕
  01111111⊕
  00101010
= 11100110 | 230 | e6

(2,0)*(0,0) => (0) = 1 * 11101101 = 11101101
(2,1)*(1,0) => (1) = 1 * 1101111 = 1101111
(2,2)*(2,0) => (2) = 2*226 = 10 * 11100010 = 11011111
(2,3)*(3,0) => (3) = (2*122)⊕122 = 11110100 ⊕ 1111010 = 10001110

state_matrix[2][0] = (0)⊕(1)⊕(2)⊕(3)
  11101101⊕
  01101111⊕
  11011111⊕
  10001110
= 11010011 | 211 | d3

(2,0)*(0,1) => (0) = 1 * 11010 = 11010
(2,1)*(1,1) => (1) = 1 * 1100111 = 1100111
(2,2)*(2,1) => (2) = 2*91 = 10 * 1011011 = 10110110
(2,3)*(3,1) => (3) = (2*76)⊕76 = 10011000 ⊕ 1001100 = 11010100

state_matrix[2][1] = (0)⊕(1)⊕(2)⊕(3)
  00011010⊕
  01100111⊕
  10110110⊕
  11010100
= 00011111 | 31 | 1f

(2,0)*(0,2) => (0) = 1 * 10000100 = 10000100
(2,1)*(1,2) => (1) = 1 * 0 = 0
(2,2)*(2,2) => (2) = 2*25 = 10 * 11001 = 110010
(2,3)*(3,2) => (3) = (2*65)⊕65 = 10000010 ⊕ 1000001 = 11000011

state_matrix[2][2] = (0)⊕(1)⊕(2)⊕(3)
  10000100⊕
  00000000⊕
  00110010⊕
  11000011
= 01110101 | 117 | 75

(2,0)*(0,3) => (0) = 1 * 10010111 = 10010111
(2,1)*(1,3) => (1) = 1 * 10010 = 10010
(2,2)*(2,3) => (2) = 2*220 = 10 * 11011100 = 10100011
(2,3)*(3,3) => (3) = (2*42)⊕42 = 1010100 ⊕ 101010 = 1111110

state_matrix[2][3] = (0)⊕(1)⊕(2)⊕(3)
  10010111⊕
  00010010⊕
  10100011⊕
  01111110
= 01011000 | 88 | 58

(3,0)*(0,0) => (0) = (2*237)⊕237 = 111011010 ⊕ 11101101 = 101100
(3,1)*(1,0) => (1) = 1 * 1101111 = 1101111
(3,2)*(2,0) => (2) = 1 * 11100010 = 11100010
(3,3)*(3,0) => (3) = 2*122 = 10 * 1111010 = 11110100

state_matrix[3][0] = (0)⊕(1)⊕(2)⊕(3)
  00101100⊕
  01101111⊕
  11100010⊕
  11110100
= 01010101 | 85 | 55

(3,0)*(0,1) => (0) = (2*26)⊕26 = 110100 ⊕ 11010 = 101110
(3,1)*(1,1) => (1) = 1 * 1100111 = 1100111
(3,2)*(2,1) => (2) = 1 * 1011011 = 1011011
(3,3)*(3,1) => (3) = 2*76 = 10 * 1001100 = 10011000

state_matrix[3][1] = (0)⊕(1)⊕(2)⊕(3)
  00101110⊕
  01100111⊕
  01011011⊕
  10011000
= 10001010 | 138 | 8a

(3,0)*(0,2) => (0) = (2*132)⊕132 = 100001000 ⊕ 10000100 = 10010111
(3,1)*(1,2) => (1) = 1 * 0 = 0
(3,2)*(2,2) => (2) = 1 * 11001 = 11001
(3,3)*(3,2) => (3) = 2*65 = 10 * 1000001 = 10000010

state_matrix[3][2] = (0)⊕(1)⊕(2)⊕(3)
  10010111⊕
  00000000⊕
  00011001⊕
  10000010
= 00001100 | 12 | 0c

(3,0)*(0,3) => (0) = (2*151)⊕151 = 100101110 ⊕ 10010111 = 10100010
(3,1)*(1,3) => (1) = 1 * 10010 = 10010
(3,2)*(2,3) => (2) = 1 * 11011100 = 11011100
(3,3)*(3,3) => (3) = 2*42 = 10 * 101010 = 1010100

state_matrix[3][3] = (0)⊕(1)⊕(2)⊕(3)
  10100010⊕
  00010010⊕
  11011100⊕
  01010100
= 00111000 | 56 | 38

=======>state_matrix<=======
e8  8a  4b  f5
74  75  ee  e6
d3  1f  75  58
55  8a  0c  38
 4) ⊕ RK_matrix_8
8e  fa  e4  56
51  bb  3d  95
ef  45  7a  4b
21  22  06  6c
=======>state_matrix<=======
66  70  af  a3
25  ce  d3  73
3c  5a  0f  13
74  a8  0a  54
=======> CIPHERTEXT: 66 25 3c 74 70 ce 5a a8 af d3 0f 0a a3 73 13 54 

Add Roundkey Round 9 ===============================================
 state_matrix:
66  70  af  a3
25  ce  d3  73
3c  5a  0f  13
74  a8  0a  54
 1) Substitution S-box =>
33  51  79  0a
3f  8b  66  8f
eb  be  76  7d
92  c2  67  20
 2) Rows are shifted <left by offsets of 0,1,2, and 3 =>
33  51  79  0a
8b  66  8f  3f
76  7d  eb  be
20  92  c2  67

 3) Mix Column:
multiplies 'fixed_matrix' ⊕ state_matrix
 i_j   i_j
(0,0)*(0,0) => (0) = 2*51 = 10 * 110011 = 1100110
(0,1)*(1,0) => (1) = (2*139)⊕139 = 100010110 ⊕ 10001011 = 10000110
(0,2)*(2,0) => (2) = 1 * 1110110 = 1110110
(0,3)*(3,0) => (3) = 1 * 100000 = 100000

state_matrix[0][0] = (0)⊕(1)⊕(2)⊕(3)
  01100110⊕
  10000110⊕
  01110110⊕
  00100000
= 10110110 | 182 | b6

(0,0)*(0,1) => (0) = 2*81 = 10 * 1010001 = 10100010
(0,1)*(1,1) => (1) = (2*102)⊕102 = 11001100 ⊕ 1100110 = 10101010
(0,2)*(2,1) => (2) = 1 * 1111101 = 1111101
(0,3)*(3,1) => (3) = 1 * 10010010 = 10010010

state_matrix[0][1] = (0)⊕(1)⊕(2)⊕(3)
  10100010⊕
  10101010⊕
  01111101⊕
  10010010
= 11100111 | 231 | e7

(0,0)*(0,2) => (0) = 2*121 = 10 * 1111001 = 11110010
(0,1)*(1,2) => (1) = (2*143)⊕143 = 100011110 ⊕ 10001111 = 10001010
(0,2)*(2,2) => (2) = 1 * 11101011 = 11101011
(0,3)*(3,2) => (3) = 1 * 11000010 = 11000010

state_matrix[0][2] = (0)⊕(1)⊕(2)⊕(3)
  11110010⊕
  10001010⊕
  11101011⊕
  11000010
= 01010001 | 81 | 51

(0,0)*(0,3) => (0) = 2*10 = 10 * 1010 = 10100
(0,1)*(1,3) => (1) = (2*63)⊕63 = 1111110 ⊕ 111111 = 1000001
(0,2)*(2,3) => (2) = 1 * 10111110 = 10111110
(0,3)*(3,3) => (3) = 1 * 1100111 = 1100111

state_matrix[0][3] = (0)⊕(1)⊕(2)⊕(3)
  00010100⊕
  01000001⊕
  10111110⊕
  01100111
= 10001100 | 140 | 8c

(1,0)*(0,0) => (0) = 1 * 110011 = 110011
(1,1)*(1,0) => (1) = 2*139 = 10 * 10001011 = 1101
(1,2)*(2,0) => (2) = (2*118)⊕118 = 11101100 ⊕ 1110110 = 10011010
(1,3)*(3,0) => (3) = 1 * 100000 = 100000

state_matrix[1][0] = (0)⊕(1)⊕(2)⊕(3)
  00110011⊕
  00001101⊕
  10011010⊕
  00100000
= 10000100 | 132 | 84

(1,0)*(0,1) => (0) = 1 * 1010001 = 1010001
(1,1)*(1,1) => (1) = 2*102 = 10 * 1100110 = 11001100
(1,2)*(2,1) => (2) = (2*125)⊕125 = 11111010 ⊕ 1111101 = 10000111
(1,3)*(3,1) => (3) = 1 * 10010010 = 10010010

state_matrix[1][1] = (0)⊕(1)⊕(2)⊕(3)
  01010001⊕
  11001100⊕
  10000111⊕
  10010010
= 10001000 | 136 | 88

(1,0)*(0,2) => (0) = 1 * 1111001 = 1111001
(1,1)*(1,2) => (1) = 2*143 = 10 * 10001111 = 101
(1,2)*(2,2) => (2) = (2*235)⊕235 = 111010110 ⊕ 11101011 = 100110
(1,3)*(3,2) => (3) = 1 * 11000010 = 11000010

state_matrix[1][2] = (0)⊕(1)⊕(2)⊕(3)
  01111001⊕
  00000101⊕
  00100110⊕
  11000010
= 10011000 | 152 | 98

(1,0)*(0,3) => (0) = 1 * 1010 = 1010
(1,1)*(1,3) => (1) = 2*63 = 10 * 111111 = 1111110
(1,2)*(2,3) => (2) = (2*190)⊕190 = 101111100 ⊕ 10111110 = 11011001
(1,3)*(3,3) => (3) = 1 * 1100111 = 1100111

state_matrix[1][3] = (0)⊕(1)⊕(2)⊕(3)
  00001010⊕
  01111110⊕
  11011001⊕
  01100111
= 11001010 | 202 | ca

(2,0)*(0,0) => (0) = 1 * 110011 = 110011
(2,1)*(1,0) => (1) = 1 * 10001011 = 10001011
(2,2)*(2,0) => (2) = 2*118 = 10 * 1110110 = 11101100
(2,3)*(3,0) => (3) = (2*32)⊕32 = 1000000 ⊕ 100000 = 1100000

state_matrix[2][0] = (0)⊕(1)⊕(2)⊕(3)
  00110011⊕
  10001011⊕
  11101100⊕
  01100000
= 00110100 | 52 | 34

(2,0)*(0,1) => (0) = 1 * 1010001 = 1010001
(2,1)*(1,1) => (1) = 1 * 1100110 = 1100110
(2,2)*(2,1) => (2) = 2*125 = 10 * 1111101 = 11111010
(2,3)*(3,1) => (3) = (2*146)⊕146 = 100100100 ⊕ 10010010 = 10101101

state_matrix[2][1] = (0)⊕(1)⊕(2)⊕(3)
  01010001⊕
  01100110⊕
  11111010⊕
  10101101
= 01100000 | 96 | 60

(2,0)*(0,2) => (0) = 1 * 1111001 = 1111001
(2,1)*(1,2) => (1) = 1 * 10001111 = 10001111
(2,2)*(2,2) => (2) = 2*235 = 10 * 11101011 = 11001101
(2,3)*(3,2) => (3) = (2*194)⊕194 = 110000100 ⊕ 11000010 = 1011101

state_matrix[2][2] = (0)⊕(1)⊕(2)⊕(3)
  01111001⊕
  10001111⊕
  11001101⊕
  01011101
= 01100110 | 102 | 66

(2,0)*(0,3) => (0) = 1 * 1010 = 1010
(2,1)*(1,3) => (1) = 1 * 111111 = 111111
(2,2)*(2,3) => (2) = 2*190 = 10 * 10111110 = 1100111
(2,3)*(3,3) => (3) = (2*103)⊕103 = 11001110 ⊕ 1100111 = 10101001

state_matrix[2][3] = (0)⊕(1)⊕(2)⊕(3)
  00001010⊕
  00111111⊕
  01100111⊕
  10101001
= 11111011 | 251 | fb

(3,0)*(0,0) => (0) = (2*51)⊕51 = 1100110 ⊕ 110011 = 1010101
(3,1)*(1,0) => (1) = 1 * 10001011 = 10001011
(3,2)*(2,0) => (2) = 1 * 1110110 = 1110110
(3,3)*(3,0) => (3) = 2*32 = 10 * 100000 = 1000000

state_matrix[3][0] = (0)⊕(1)⊕(2)⊕(3)
  01010101⊕
  10001011⊕
  01110110⊕
  01000000
= 11101000 | 232 | e8

(3,0)*(0,1) => (0) = (2*81)⊕81 = 10100010 ⊕ 1010001 = 11110011
(3,1)*(1,1) => (1) = 1 * 1100110 = 1100110
(3,2)*(2,1) => (2) = 1 * 1111101 = 1111101
(3,3)*(3,1) => (3) = 2*146 = 10 * 10010010 = 111111

state_matrix[3][1] = (0)⊕(1)⊕(2)⊕(3)
  11110011⊕
  01100110⊕
  01111101⊕
  00111111
= 11010111 | 215 | d7

(3,0)*(0,2) => (0) = (2*121)⊕121 = 11110010 ⊕ 1111001 = 10001011
(3,1)*(1,2) => (1) = 1 * 10001111 = 10001111
(3,2)*(2,2) => (2) = 1 * 11101011 = 11101011
(3,3)*(3,2) => (3) = 2*194 = 10 * 11000010 = 10011111

state_matrix[3][2] = (0)⊕(1)⊕(2)⊕(3)
  10001011⊕
  10001111⊕
  11101011⊕
  10011111
= 01110000 | 112 | 70

(3,0)*(0,3) => (0) = (2*10)⊕10 = 10100 ⊕ 1010 = 11110
(3,1)*(1,3) => (1) = 1 * 111111 = 111111
(3,2)*(2,3) => (2) = 1 * 10111110 = 10111110
(3,3)*(3,3) => (3) = 2*103 = 10 * 1100111 = 11001110

state_matrix[3][3] = (0)⊕(1)⊕(2)⊕(3)
  00011110⊕
  00111111⊕
  10111110⊕
  11001110
= 01010001 | 81 | 51

=======>state_matrix<=======
b6  e7  51  8c
84  88  98  ca
34  60  66  fb
e8  d7  70  51
 4) ⊕ RK_matrix_9
bf  45  a1  f7
e2  59  64  f1
bf  fa  80  cb
90  b2  b4  d8
=======>state_matrix<=======
09  a2  f0  7b
66  d1  fc  3b
8b  9a  e6  30
78  65  c4  89
=======> CIPHERTEXT: 09 66 8b 78 a2 d1 9a 65 f0 fc e6 c4 7b 3b 30 89 

Add Roundkey Round 10 ===============================================
 1) Substitution S-box =>
01  3a  8c  21
33  3e  b0  e2
3d  b8  8e  04
bc  4d  1c  a7
 2) Rows are shifted <-left by offsets of 0,1,2, and 3 =>
01  3a  8c  21
3e  b0  e2  33
8e  04  3d  b8
a7  bc  4d  1c
 3) ⊕ RK_matrix_10
28  6d  cc  3b
fd  a4  c0  31
de  24  a4  6f
f8  4a  fe  26
=======>state_matrix<=======
29  57  40  1a
c3  14  22  02
50  20  99  d7
5f  f6  b3  3a
=======> CIPHERTEXT: 29 c3 50 5f 57 14 20 f6 40 22 99 b3 1a 02 d7 3a 


====================================================================
Encrypted Plaintext: 29 c3 50 5f 57 14 20 f6 40 22 99 b3 1a 02 d7 3a 
====================================================================


Add Round Keys:
--------------------------------------------------------------------
Add Roundkey Round 0 ===============================================
 state matrix: (encrypted text as matrix)
29  57  40  1a
c3  14  22  02
50  20  99  d7
5f  f6  b3  3a
 ⊕ RK_matrix_10
28  6d  cc  3b
fd  a4  c0  31
de  24  a4  6f
f8  4a  fe  26
=======>state_matrix<=======
01  3a  8c  21
3e  b0  e2  33
8e  04  3d  b8
a7  bc  4d  1c
 2) Rows are shifted right-> by offsets of 0,1,2, and 3 =>
01  3a  8c  21
33  3e  b0  e2
3d  b8  8e  04
bc  4d  1c  a7
 3) Substitution S-box =>
09  a2  f0  7b
66  d1  fc  3b
8b  9a  e6  30
78  65  c4  89

Add Roundkey Round 1 ===============================================
 state_matrix:
09  a2  f0  7b
66  d1  fc  3b
8b  9a  e6  30
78  65  c4  89
 1) ⊕ RK_matrix_9
bf  45  a1  f7
e2  59  64  f1
bf  fa  80  cb
90  b2  b4  d8
=======>state_matrix<=======
b6  e7  51  8c
84  88  98  ca
34  60  66  fb
e8  d7  70  51
 2) Mix Column:
multiplies 'fixed_matrix' against current state_matrix
=======>state_matrix<=======
33  51  79  0a
8b  66  8f  3f
76  7d  eb  be
20  92  c2  67
 3) Rows are shifted right-> by offsets of 0,1,2, and 3 =>
33  51  79  0a
3f  8b  66  8f
eb  be  76  7d
92  c2  67  20
 4) Substitution S-box-inv =>
66  70  af  a3
25  ce  d3  73
3c  5a  0f  13
74  a8  0a  54

Add Roundkey Round 2 ===============================================
 state_matrix:
66  70  af  a3
25  ce  d3  73
3c  5a  0f  13
74  a8  0a  54
 1) ⊕ RK_matrix_8
8e  fa  e4  56
51  bb  3d  95
ef  45  7a  4b
21  22  06  6c
=======>state_matrix<=======
e8  8a  4b  f5
74  75  ee  e6
d3  1f  75  58
55  8a  0c  38
 2) Mix Column:
multiplies 'fixed_matrix' against current state_matrix
=======>state_matrix<=======
ed  1a  84  97
6f  67  00  12
e2  5b  19  dc
7a  4c  41  2a
 3) Rows are shifted right-> by offsets of 0,1,2, and 3 =>
ed  1a  84  97
12  6f  67  00
19  dc  e2  5b
4c  41  2a  7a
 4) Substitution S-box-inv =>
53  43  4f  85
39  06  0a  52
8e  93  3b  57
5d  f8  95  bd

Add Roundkey Round 3 ===============================================
 state_matrix:
53  43  4f  85
39  06  0a  52
8e  93  3b  57
5d  f8  95  bd
 1) ⊕ RK_matrix_7
cc  74  1e  b2
96  ea  86  a8
ed  aa  3f  31
16  03  24  6a
=======>state_matrix<=======
9f  37  51  37
af  ec  8c  fa
63  39  04  66
4b  fb  b1  d7
 2) Mix Column:
multiplies 'fixed_matrix' against current state_matrix
=======>state_matrix<=======
fa  73  ba  58
49  d0  76  dc
36  4f  3f  f1
9d  f5  9b  09
 3) Rows are shifted right-> by offsets of 0,1,2, and 3 =>
fa  73  ba  58
dc  49  d0  76
3f  f1  36  4f
f5  9b  09  9d
 4) Substitution S-box-inv =>
14  8f  c0  5e
93  a4  60  0f
25  2b  24  92
77  e8  40  75

Add Roundkey Round 4 ===============================================
 state_matrix:
14  8f  c0  5e
93  a4  60  0f
25  2b  24  92
77  e8  40  75
 1) ⊕ RK_matrix_6
bd  b8  6a  ac
3d  7c  6c  2e
c2  47  95  0e
87  15  27  4e
=======>state_matrix<=======
a9  37  aa  f2
ae  d8  0c  21
e7  6c  b1  9c
f0  fd  67  3b
 2) Mix Column:
multiplies 'fixed_matrix' against current state_matrix
=======>state_matrix<=======
14  26  4c  15
cf  9c  07  d1
7a  81  b7  93
b1  45  8c  23
 3) Rows are shifted right-> by offsets of 0,1,2, and 3 =>
14  26  4c  15
d1  cf  9c  07
b7  93  7a  81
45  8c  23  b1
 4) Substitution S-box-inv =>
9b  23  5d  2f
51  5f  1c  38
20  22  bd  91
68  f0  32  56

Add Roundkey Round 5 ===============================================
 state_matrix:
9b  23  5d  2f
51  5f  1c  38
20  22  bd  91
68  f0  32  56
 1) ⊕ RK_matrix_5
b1  05  d2  c6
29  41  10  42
3b  85  d2  9b
33  92  32  69
=======>state_matrix<=======
2a  26  8f  e9
78  1e  0c  7a
1b  a7  6f  0a
5b  62  00  3f
 2) Mix Column:
multiplies 'fixed_matrix' against current state_matrix
=======>state_matrix<=======
c8  30  f2  94
b0  c8  37  74
dd  50  d1  20
b7  55  f8  66
 3) Rows are shifted right-> by offsets of 0,1,2, and 3 =>
c8  30  f2  94
74  b0  c8  37
d1  20  dd  50
55  f8  66  b7
 4) Substitution S-box-inv =>
b1  08  04  e7
ca  fc  b1  b2
51  54  c9  6c
ed  e1  d3  20

Add Roundkey Round 6 ===============================================
 state_matrix:
b1  08  04  e7
ca  fc  b1  b2
51  54  c9  6c
ed  e1  d3  20
 1) ⊕ RK_matrix_4
a1  b4  d7  14
12  68  51  52
02  be  57  49
c9  a1  a0  5b
=======>state_matrix<=======
10  bc  d3  f3
d8  94  e0  e0
53  ea  9e  25
24  40  73  7b
 2) Mix Column:
multiplies 'fixed_matrix' against current state_matrix
=======>state_matrix<=======
bc  51  ee  b3
38  eb  12  38
9a  18  04  ff
a1  20  26  39
 3) Rows are shifted right-> by offsets of 0,1,2, and 3 =>
bc  51  ee  b3
38  38  eb  12
04  ff  9a  18
20  26  39  a1
 4) Substitution S-box-inv =>
78  70  99  4b
76  76  3c  39
30  7d  37  34
54  23  5b  f1

Add Roundkey Round 7 ===============================================
 state_matrix:
78  70  99  4b
76  76  3c  39
30  7d  37  34
54  23  5b  f1
 1) ⊕ RK_matrix_3
d2  15  63  c3
60  7a  39  03
0d  bc  e9  1e
e7  68  01  fb
=======>state_matrix<=======
aa  65  fa  88
16  0c  05  3a
3d  c1  de  2a
b3  4b  5a  0a
 2) Mix Column:
multiplies 'fixed_matrix' against current state_matrix
=======>state_matrix<=======
1a  ab  01  27
5b  30  41  b4
e9  d2  d3  ba
9a  aa  e8  bb
 3) Rows are shifted right-> by offsets of 0,1,2, and 3 =>
1a  ab  01  27
b4  5b  30  41
d3  ba  e9  d2
aa  e8  bb  9a
 4) Substitution S-box-inv =>
43  0e  09  3d
c6  57  08  f8
a9  c0  eb  7f
62  c8  fe  37

Add Roundkey Round 8 ===============================================
 state_matrix:
43  0e  09  3d
c6  57  08  f8
a9  c0  eb  7f
62  c8  fe  37
 1) ⊕ RK_matrix_2
56  c7  76  a0
08  1a  43  3a
20  b1  55  f7
07  8f  69  fa
=======>state_matrix<=======
15  c9  7f  9d
ce  4d  4b  c2
89  71  be  88
65  47  97  cd
 2) Mix Column:
multiplies 'fixed_matrix' against current state_matrix
=======>state_matrix<=======
6a  59  cb  bd
4e  48  12  a0
98  9e  30  9c
8b  3d  f4  9b
 3) Rows are shifted right-> by offsets of 0,1,2, and 3 =>
6a  59  cb  bd
a0  4e  48  12
30  9c  98  9e
3d  f4  9b  8b
 4) Substitution S-box-inv =>
58  15  59  cd
47  b6  d4  39
08  1c  e2  df
8b  ba  e8  ce

Add Roundkey Round 9 ===============================================
 state_matrix:
58  15  59  cd
47  b6  d4  39
08  1c  e2  df
8b  ba  e8  ce
 1) ⊕ RK_matrix_1
e2  91  b1  d6
32  12  59  79
fc  91  e4  a2
f1  88  e6  93
=======>state_matrix<=======
ba  84  e8  1b
75  a4  8d  40
f4  8d  06  7d
7a  32  0e  5d
 2) Mix Column:
multiplies 'fixed_matrix' against current state_matrix
=======>state_matrix<=======
63  eb  9f  a0
2f  93  92  c0
af  c7  ab  30
a2  20  cb  2b
 3) Rows are shifted right-> by offsets of 0,1,2, and 3 =>
63  eb  9f  a0
c0  2f  93  92
ab  30  af  c7
20  cb  2b  a2
 4) Substitution S-box-inv =>
00  3c  6e  47
1f  4e  22  74
0e  08  1b  31
54  59  0b  1a

Add Roundkey Round 10 ===============================================
 state_matrix:
00  3c  6e  47
1f  4e  22  74
0e  08  1b  31
54  59  0b  1a
 ⊕ RK_matrix_0
54  73  20  67
68  20  4b  20
61  6d  75  46
74  79  6e  75
=======>state_matrix<=======
54  4f  4e  20
77  6e  69  54
6f  65  6e  77
20  20  65  6f
=======> CIPHERTEXT: 54 77 6f 20 4f 6e 65 20 4e 69 6e 65 20 54 77 6f 

--------------------------------------------------------------------
ASCII Plaintxt ---: 'Two One Nine Two'
ASCII Key --------: 'Thats my Kung Fu'
HEX   Plaintxt ---: 54 77 6f 20 4f 6e 65 20 4e 69 6e 65 20 54 77 6f
HEX   Key --------: 54 68 61 74 73 20 6d 79 20 4b 75 6e 67 20 46 75
--------------------------------------------------------------------
-==+1+==- Plaintext: 54 77 6f 20 4f 6e 65 20 4e 69 6e 65 20 54 77 6f 
-==+2+==- Encrypted: 29 c3 50 5f 57 14 20 f6 40 22 99 b3 1a 02 d7 3a 
-==+3+==- Decrypted: 54 77 6f 20 4f 6e 65 20 4e 69 6e 65 20 54 77 6f 

